{"version":3,"sources":["../../src/third-party/collection.tsx","../../src/third-party/collection-row.tsx","../../src/third-party/collection-column-title.tsx","../../src/icons/type-title.tsx","../../src/icons/type-text.tsx","../../src/icons/type-number.tsx","../../src/icons/type-select.tsx","../../src/icons/type-multi-select.tsx","../../src/icons/type-date.tsx","../../src/icons/type-person.tsx","../../src/icons/type-file.tsx","../../src/icons/type-checkbox.tsx","../../src/icons/type-url.tsx","../../src/icons/type-email.tsx","../../src/icons/type-phone-number.tsx","../../src/icons/type-formula.tsx","../../src/icons/type-relation.tsx","../../src/icons/type-person-2.tsx","../../src/icons/type-timestamp.tsx","../../src/icons/property-icon.tsx","../../src/third-party/property.tsx","../../src/utils.ts","../../src/context.tsx","../../src/next.tsx","../../src/components/asset-wrapper.tsx","../../src/components/asset.tsx","../../src/components/lazy-image.tsx","../../src/components/lite-youtube-embed.tsx","../../src/components/text.tsx","../../src/components/page-title.tsx","../../src/components/page-icon.tsx","../../src/icons/default-page-icon.tsx","../../src/components/graceful-image.tsx","../../src/components/external-component-github.tsx","../../src/icons/type-github.tsx","../../src/components/checkbox.tsx","../../src/icons/check.tsx","../../src/third-party/eval-formula.ts","../../src/icons/collection-view-table.tsx","../../src/icons/collection-view-board.tsx","../../src/icons/collection-view-gallery.tsx","../../src/icons/collection-view-list.tsx","../../src/icons/collection-view-calendar.tsx","../../src/icons/collection-view-icon.tsx","../../src/icons/chevron-down-icon.tsx","../../src/third-party/collection-view.tsx","../../src/third-party/collection-view-table.tsx","../../src/third-party/collection-group.tsx","../../src/third-party/collection-utils.ts","../../src/third-party/collection-view-gallery.tsx","../../src/third-party/collection-card.tsx","../../src/third-party/collection-view-list.tsx","../../src/third-party/collection-view-board.tsx","../../src/icons/empty-icon.tsx"],"sourcesContent":["import React from 'react'\nimport * as types from 'notion-types'\nimport { getBlockParentPage, getTextContent } from 'notion-utils'\nimport { useLocalStorage, useWindowSize } from 'react-use'\nimport Dropdown from 'rc-dropdown'\nimport Menu, { Item as MenuItem } from 'rc-menu'\n\nimport { CollectionRow } from './collection-row'\nimport { CollectionViewIcon } from '../icons/collection-view-icon'\nimport { ChevronDownIcon } from '../icons/chevron-down-icon'\nimport { CollectionView } from './collection-view'\nimport { PageIcon } from '../components/page-icon'\nimport {\n  NotionContext,\n  NotionContextProvider,\n  useNotionContext\n} from '../context'\nimport { cs } from '../utils'\n\nconst isServer = typeof window === 'undefined'\nconst triggers = ['click']\n\nexport const Collection: React.FC<{\n  block:\n    | types.CollectionViewBlock\n    | types.CollectionViewPageBlock\n    | types.PageBlock\n  className?: string\n  ctx: NotionContext\n}> = ({ block, className, ctx }) => {\n  /**\n   * NOTE: there is a weird oddity of us using multiple bundles for collections,\n   * where `useNotionContext` returns a *different* context than for the main\n   * bundle.\n   *\n   * This is due to `React.createContext` being called in each bundle which includes\n   * `../context.ts`.\n   *\n   * To circumvent this issue, we're passing the context value directly to\n   * `Collection` so all children have the correct context values.\n   */\n  // console.log('Collection', Object.keys(recordMap.block).length)\n\n  if (block.type === 'page') {\n    if (block.parent_table !== 'collection') {\n      return null\n    }\n\n    return (\n      <NotionContextProvider {...ctx}>\n        <div className='notion-collection-page-properties'>\n          <CollectionRow\n            block={block as types.PageBlock}\n            className={className}\n          />\n        </div>\n      </NotionContextProvider>\n    )\n  } else {\n    return (\n      <NotionContextProvider {...ctx}>\n        <CollectionViewBlock block={block} className={className} />\n      </NotionContextProvider>\n    )\n  }\n}\n\nconst CollectionViewBlock: React.FC<{\n  block: types.CollectionViewBlock | types.CollectionViewPageBlock\n  className?: string\n}> = ({ block, className }) => {\n  const { recordMap, showCollectionViewDropdown } = useNotionContext()\n  const { collection_id: collectionId, view_ids: viewIds } = block\n\n  const [collectionState, setCollectionState] = useLocalStorage(block.id, {\n    collectionViewId: viewIds[0]\n  })\n\n  const collectionViewId =\n    viewIds.find((id) => id === collectionState.collectionViewId) || viewIds[0]\n\n  const onChangeView = React.useCallback(\n    ({ key: collectionViewId }) => {\n      console.log('change collection view', collectionViewId)\n\n      setCollectionState({\n        ...collectionState,\n        collectionViewId\n      })\n    },\n    [collectionState, setCollectionState]\n  )\n\n  let { width } = useWindowSize()\n  if (isServer) {\n    width = 1024\n  }\n\n  // TODO: customize for mobile?\n  const maxNotionBodyWidth = 708\n  let notionBodyWidth = maxNotionBodyWidth\n\n  const parentPage = getBlockParentPage(block, recordMap)\n  if (parentPage?.format?.page_full_width) {\n    notionBodyWidth = (width - 2 * Math.min(96, width * 0.08)) | 0\n  } else {\n    notionBodyWidth =\n      width < maxNotionBodyWidth\n        ? (width - width * 0.02) | 0 // 2vw\n        : maxNotionBodyWidth\n  }\n\n  const padding = isServer ? 96 : ((width - notionBodyWidth) / 2) | 0\n  // console.log({ width, notionBodyWidth, padding })\n\n  const collection = recordMap.collection[collectionId]?.value\n  const collectionView = recordMap.collection_view[collectionViewId]?.value\n  const collectionData =\n    recordMap.collection_query[collectionId]?.[collectionViewId]\n\n  if (!(collection && collectionView && collectionData)) {\n    console.warn('skipping missing collection view for block', block.id, {\n      collectionId,\n      collectionViewId,\n      collectionView,\n      collectionData,\n      recordMap\n    })\n    return null\n  }\n\n  const style: React.CSSProperties = {}\n  if (collectionView.type === 'table' || collectionView.type === 'board') {\n    style.paddingLeft = padding\n    style.paddingRight = padding\n  }\n\n  const title = getTextContent(collection.name).trim()\n  if (collection.icon) {\n    block.format = {\n      ...block.format,\n      page_icon: collection.icon\n    }\n  }\n\n  /**\n    TODO: this is hacky and really shouldn't be necessary, but when imported by\n    next.js 12 (webpack 5), the default exports from rc-dropdown and rc-menu are\n    replaced with commonjs equivalents `{ default: Dropdown }` instead of `Dropdown`\n    directly.\n\n    The safest fix would be to bundle the react-notion-x exports to prevent to\n    guarantee that all of its imports are handled as expected a library build tima,\n    but that will need to come in a later revision.\n  */\n  const DropdownSafe = (Dropdown as any).default ?? Dropdown\n  const MenuSafe = (Menu as any).default ?? Menu\n  // console.log('Collection', { Dropdown, Menu, MenuItem, DropdownSafe, MenuSafe })\n\n  return (\n    <div className={cs('notion-collection', className)}>\n      <div className='notion-collection-header' style={style}>\n        {title && (\n          <div className='notion-collection-header-title'>\n            <>\n              <PageIcon\n                block={block}\n                className='notion-page-title-icon'\n                hideDefaultIcon\n              />\n\n              {title}\n            </>\n          </div>\n        )}\n\n        {viewIds.length > 1 && showCollectionViewDropdown && (\n          <DropdownSafe\n            trigger={triggers}\n            overlay={\n              <MenuSafe onSelect={onChangeView}>\n                {viewIds.map((viewId) => (\n                  <MenuItem\n                    key={viewId}\n                    className='notion-collection-view-type-menu-item'\n                  >\n                    <CollectionViewColumnDesc\n                      collectionView={recordMap.collection_view[viewId]?.value}\n                    />\n                  </MenuItem>\n                ))}\n              </MenuSafe>\n            }\n            animation='slide-up'\n          >\n            <CollectionViewColumnDesc\n              className='notion-collection-view-dropdown'\n              collectionView={collectionView}\n            >\n              <ChevronDownIcon className='notion-collection-view-dropdown-icon' />\n            </CollectionViewColumnDesc>\n          </DropdownSafe>\n        )}\n      </div>\n\n      <CollectionView\n        collection={collection}\n        collectionView={collectionView}\n        collectionData={collectionData}\n        padding={padding}\n        width={width}\n      />\n    </div>\n  )\n}\n\nconst CollectionViewColumnDesc: React.FC<{\n  collectionView: types.CollectionView\n  className?: string\n  children?: React.ReactNode\n}> = ({ collectionView, className, children, ...rest }) => {\n  const { type } = collectionView\n  const name =\n    collectionView.name || `${type[0].toUpperCase()}${type.slice(1)} view`\n\n  return (\n    <div className={cs('notion-collection-view-type', className)} {...rest}>\n      <CollectionViewIcon\n        className='notion-collection-view-type-icon'\n        type={type}\n      />\n\n      <span className='notion-collection-view-type-title'>{name}</span>\n\n      {children}\n    </div>\n  )\n}\n","import React from 'react'\nimport { PageBlock } from 'notion-types'\n\nimport { CollectionColumnTitle } from './collection-column-title'\nimport { Property } from './property'\nimport { useNotionContext } from '../context'\nimport { cs } from '../utils'\n\nexport const CollectionRow: React.FC<{\n  block: PageBlock\n  className?: string\n}> = ({ block, className }) => {\n  const { recordMap } = useNotionContext()\n  const collectionId = block.parent_id\n  const collection = recordMap.collection[collectionId]?.value\n  const schemas = collection?.schema\n\n  if (!collection || !schemas) {\n    return null\n  }\n\n  let propertyIds = Object.keys(schemas).filter((id) => id !== 'title')\n\n  // filter properties based on visibility\n  if (collection.format?.property_visibility) {\n    propertyIds = propertyIds.filter(\n      (id) =>\n        collection.format.property_visibility.find(\n          ({ property }) => property === id\n        )?.visibility !== 'hide'\n    )\n  }\n\n  // sort properties\n  if (collection.format?.collection_page_properties) {\n    // sort properties based on collection page order\n    const idToIndex = collection.format?.collection_page_properties.reduce(\n      (acc, p, i) => ({\n        ...acc,\n        [p.property]: i\n      }),\n      {}\n    )\n\n    propertyIds.sort((a, b) => idToIndex[a] - idToIndex[b])\n  } else {\n    // default to sorting properties alphabetically based on name\n    propertyIds.sort((a, b) => schemas[a].name.localeCompare(schemas[b].name))\n  }\n\n  return (\n    <div className={cs('notion-collection-row', className)}>\n      <div className='notion-collection-row-body'>\n        {propertyIds.map((id) => {\n          const schema = schemas[id]\n\n          return (\n            <div className='notion-collection-row-property' key={id}>\n              <CollectionColumnTitle schema={schema} />\n\n              <div className='notion-collection-row-value'>\n                <Property\n                  schema={schema}\n                  data={block.properties?.[id]}\n                  block={block}\n                  collection={collection}\n                />\n              </div>\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { CollectionPropertySchema } from 'notion-types'\n\nimport { PropertyIcon } from '../icons/property-icon'\n\nexport const CollectionColumnTitle: React.FC<{\n  schema: CollectionPropertySchema\n}> = ({ schema }) => {\n  return (\n    <div className='notion-collection-column-title'>\n      <PropertyIcon\n        className='notion-collection-column-title-icon'\n        type={schema.type}\n      />\n\n      <div className='notion-collection-column-title-body'>{schema.name}</div>\n    </div>\n  )\n}\n","import React from 'react'\n\nfunction SvgTypeTitle(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M7.74 8.697a.81.81 0 01.073.308.894.894 0 01-.9.888.867.867 0 01-.825-.592l-.333-.961H2.058l-.333.961a.882.882 0 01-.838.592A.884.884 0 010 9.005c0-.11.025-.222.062-.308l2.403-6.211c.222-.58.776-.986 1.442-.986.653 0 1.22.407 1.442.986l2.39 6.211zM2.6 6.824h2.613L3.907 3.102 2.6 6.824zm8.8-3.118c1.355 0 2.6.542 2.6 2.255V9.08a.8.8 0 01-.789.814.797.797 0 01-.788-.703c-.395.468-1.097.764-1.874.764-.949 0-2.07-.64-2.07-1.972 0-1.392 1.121-1.897 2.07-1.897.789 0 1.491.246 1.886.727v-.826c0-.604-.518-.998-1.306-.998-.469 0-.888.123-1.32.394a.64.64 0 01-.307.086.602.602 0 01-.592-.604c0-.221.123-.419.284-.517a3.963 3.963 0 012.206-.641zm-.222 5.188c.505 0 .998-.172 1.257-.517v-.74c-.259-.345-.752-.517-1.257-.517-.616 0-1.122.332-1.122.9 0 .554.506.874 1.122.874zM.656 11.125h12.688a.656.656 0 110 1.313H.656a.656.656 0 110-1.313z' />\n    </svg>\n  )\n}\n\nexport default SvgTypeTitle\n","import React from 'react'\n\nfunction SvgTypeText(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M7 4.568a.5.5 0 00-.5-.5h-6a.5.5 0 00-.5.5v1.046a.5.5 0 00.5.5h6a.5.5 0 00.5-.5V4.568zM.5 1a.5.5 0 00-.5.5v1.045a.5.5 0 00.5.5h12a.5.5 0 00.5-.5V1.5a.5.5 0 00-.5-.5H.5zM0 8.682a.5.5 0 00.5.5h11a.5.5 0 00.5-.5V7.636a.5.5 0 00-.5-.5H.5a.5.5 0 00-.5.5v1.046zm0 3.068a.5.5 0 00.5.5h9a.5.5 0 00.5-.5v-1.045a.5.5 0 00-.5-.5h-9a.5.5 0 00-.5.5v1.045z' />\n    </svg>\n  )\n}\n\nexport default SvgTypeText\n","import React from 'react'\n\nfunction SvgTypeNumber(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M4.462 0c-.595 0-1.078.482-1.078 1.078v2.306H1.078a1.078 1.078 0 100 2.155h2.306v2.922H1.078a1.078 1.078 0 100 2.155h2.306v2.306a1.078 1.078 0 002.155 0v-2.306H8.46v2.306a1.078 1.078 0 002.156 0v-2.306h2.306a1.078 1.078 0 100-2.155h-2.306V5.539h2.306a1.078 1.078 0 100-2.155h-2.306V1.078a1.078 1.078 0 00-2.156 0v2.306H5.54V1.078C5.54.482 5.056 0 4.461 0zm1.077 8.46V5.54H8.46v2.92H5.54z' />\n    </svg>\n  )\n}\n\nexport default SvgTypeNumber\n","import React from 'react'\n\nfunction SvgTypeSelect(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M7 13A6 6 0 107 1a6 6 0 000 12zM3.751 5.323A.2.2 0 013.909 5h6.182a.2.2 0 01.158.323L7.158 9.297a.2.2 0 01-.316 0L3.751 5.323z' />\n    </svg>\n  )\n}\n\nexport default SvgTypeSelect\n","import React from 'react'\n\nfunction SvgTypeMultiSelect(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M4 3a1 1 0 011-1h7a1 1 0 110 2H5a1 1 0 01-1-1zm0 4a1 1 0 011-1h7a1 1 0 110 2H5a1 1 0 01-1-1zm0 4a1 1 0 011-1h7a1 1 0 110 2H5a1 1 0 01-1-1zM2 4a1 1 0 110-2 1 1 0 010 2zm0 4a1 1 0 110-2 1 1 0 010 2zm0 4a1 1 0 110-2 1 1 0 010 2z' />\n    </svg>\n  )\n}\n\nexport default SvgTypeMultiSelect\n","import React from 'react'\n\nfunction SvgTypeDate(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M10.889 5.5H3.11v1.556h7.778V5.5zm1.555-4.444h-.777V0H10.11v1.056H3.89V0H2.333v1.056h-.777c-.864 0-1.548.7-1.548 1.555L0 12.5c0 .856.692 1.5 1.556 1.5h10.888C13.3 14 14 13.356 14 12.5V2.611c0-.855-.7-1.555-1.556-1.555zm0 11.444H1.556V3.944h10.888V12.5zM8.556 8.611H3.11v1.556h5.445V8.61z' />\n    </svg>\n  )\n}\n\nexport default SvgTypeDate\n","import React from 'react'\n\nfunction SvgTypePerson(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M9.625 10.847C8.912 10.289 8.121 9.926 7 9.26v-.54a3.33 3.33 0 00.538-.888c.408-.1.774-.498.774-.832 0-.482-.202-.673-.44-.829 0-.015.003-.03.003-.046 0-.711-.438-2.625-2.625-2.625-2.188 0-2.625 1.915-2.625 2.625 0 .017.003.03.003.046-.238.156-.44.347-.44.829 0 .334.366.731.774.833.146.343.326.643.538.886v.541c-1.12.665-1.912 1.028-2.625 1.587C.041 11.498 0 12.469 0 14h10.5c0-1.531-.041-2.502-.875-3.153zm3.5-3.5c-.713-.558-1.504-.921-2.625-1.587v-.54c.212-.244.392-.544.538-.888.408-.1.774-.498.774-.832 0-.482-.202-.673-.44-.829 0-.015.003-.03.003-.046C11.375 1.914 10.937 0 8.75 0 6.562 0 6.125 1.915 6.125 2.625c0 .017.003.03.003.046-.016.012-.03.025-.047.036 1.751.359 2.516 1.841 2.647 3.04.248.262.46.65.46 1.253 0 .603-.417 1.203-1.004 1.515-.057.109-.117.214-.181.315l.437.245c.64.357 1.194.666 1.724 1.081.138.108.256.224.365.343H14c0-1.53-.041-2.5-.875-3.153z' />\n    </svg>\n  )\n}\n\nexport default SvgTypePerson\n","import React from 'react'\n\nfunction SvgTypeFile(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M5.946 14a4.975 4.975 0 01-3.497-1.415A4.731 4.731 0 011 9.174c0-1.288.515-2.5 1.449-3.41L7.456.986c1.345-1.313 3.722-1.318 5.08.007a3.453 3.453 0 010 4.961L8.03 10.241c-.867.847-2.293.848-3.17-.006a2.158 2.158 0 010-3.102l1.744-1.701 1.272 1.24-1.744 1.701a.43.43 0 000 .621c.23.223.405.223.636 0l4.503-4.288a1.723 1.723 0 00-.007-2.473c-.68-.663-1.864-.663-2.543 0L3.713 7.011a3.006 3.006 0 00-.915 2.163c0 .82.328 1.591.922 2.17 1.19 1.162 3.262 1.162 4.451 0l2.248-2.192 1.272 1.24-2.248 2.193A4.978 4.978 0 015.946 14z' />\n    </svg>\n  )\n}\n\nexport default SvgTypeFile\n","import React from 'react'\n\nfunction SvgTypeCheckbox(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M0 3a3 3 0 013-3h8a3 3 0 013 3v8a3 3 0 01-3 3H3a3 3 0 01-3-3V3zm3-1.5A1.5 1.5 0 001.5 3v8A1.5 1.5 0 003 12.5h8a1.5 1.5 0 001.5-1.5V3A1.5 1.5 0 0011 1.5H3zm-.167 5.316l.566-.542.177-.17.347-.332.346.334.176.17 1.139 1.098 3.699-3.563.177-.17.347-.335.347.334.177.17.563.543.177.171.372.36-.372.36-.177.17-4.786 4.615-.177.171-.347.334-.347-.334-.177-.17-2.23-2.15-.177-.172-.375-.361.376-.36.179-.17z' />\n    </svg>\n  )\n}\n\nexport default SvgTypeCheckbox\n","import React from 'react'\n\nfunction SvgTypeUrl(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M3.733 3.867h3.734c1.03 0 1.866.837 1.866 1.866 0 1.03-.837 1.867-1.866 1.867h-.934a.934.934 0 000 1.867h.934a3.734 3.734 0 000-7.467H3.733A3.73 3.73 0 001.89 8.977a4.637 4.637 0 01.314-2.18 1.854 1.854 0 01-.336-1.064c0-1.03.837-1.866 1.866-1.866zm8.377 1.422a4.6 4.6 0 01-.316 2.176c.212.303.34.67.34 1.068 0 1.03-.838 1.867-1.867 1.867H6.533a1.869 1.869 0 01-1.866-1.867c0-1.03.837-1.866 1.866-1.866h.934a.934.934 0 000-1.867h-.934a3.733 3.733 0 000 7.467h3.734a3.73 3.73 0 001.843-6.978z' />\n    </svg>\n  )\n}\n\nexport default SvgTypeUrl\n","import React from 'react'\n\nfunction SvgTypeEmail(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M14 6.225c0 .822-.133 1.574-.4 2.256-.267.683-.644 1.218-1.13 1.606-.488.388-.946.6-1.494.6-.429 0-.808-.102-1.139-.305a1.753 1.753 0 01-.713-.8c-.613.736-1.563 1.104-2.531 1.104-1.027 0-1.835-.304-2.427-.912-.591-.608-.887-1.44-.887-2.496 0-1.204.389-2.175 1.166-2.911.776-.736 1.791-1.105 3.044-1.105.498 0 2.032.212 2.252.268.51.13.86.593.835 1.112l-.156 3.287c0 .794.22 1.19.66 1.19.372 0 .668-.267.888-.8.22-.534.33-1.232.33-2.094 0-.919-.194-1.731-.582-2.436a3.924 3.924 0 00-1.64-1.614c-.704-.371-1.509-.557-2.413-.557-1.172 0-2.19.237-3.053.711a4.785 4.785 0 00-1.988 2.05c-.46.894-.691 1.926-.691 3.096 0 1.576.428 2.784 1.283 3.627.855.841 2.094 1.262 3.718 1.262.615 0 1.29-.067 2.027-.2.225-.042.518-.108.877-.2a.863.863 0 011.025.527.76.76 0 01-.502.993c-1.052.316-2.17.488-3.357.516-2.204 0-3.922-.57-5.154-1.713C.616 11.146 0 9.56 0 7.527c0-1.41.315-2.69.944-3.84A6.792 6.792 0 013.63.98C4.794.327 6.131 0 7.645 0c1.276 0 2.514.29 3.418.77.905.481 1.574 1.228 2.12 2.176.544.947.817 2.04.817 3.28zm-8.615 1.01c0 1.208.488 1.811 1.466 1.811.511 0 .9-.181 1.168-.545.267-.363.429-.954.486-1.772l.11-1.896a4.638 4.638 0 00-.98-.095c-.71 0-1.263.224-1.658.67-.395.446-.592 1.055-.592 1.828z' />\n    </svg>\n  )\n}\n\nexport default SvgTypeEmail\n","import React from 'react'\n\nfunction SvgTypePhoneNumber(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M2.207.013a.487.487 0 00-.29.02C.87.438.213 1.93.058 2.955c-.484 3.33 2.15 6.215 4.57 8.113 2.149 1.684 6.273 4.453 8.713 1.781.31-.329.678-.813.658-1.297-.058-.813-.813-1.394-1.394-1.84-.445-.329-1.375-1.239-1.956-1.22-.522.02-.851.562-1.18.891l-.582.581c-.096.097-1.336-.716-1.471-.813a9.881 9.881 0 01-1.414-1.104A9.13 9.13 0 014.86 6.732c-.097-.136-.89-1.317-.813-1.414 0 0 .677-.736.871-1.026.407-.62.717-1.104.252-1.84-.174-.27-.387-.484-.62-.716-.406-.387-.813-.794-1.278-1.123-.251-.194-.677-.542-1.065-.6z' />\n    </svg>\n  )\n}\n\nexport default SvgTypePhoneNumber\n","import React from 'react'\n\nfunction SvgTypeFormula(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M7.779 7.063l-3.157 4.224a.49.49 0 00-.072.218.35.35 0 00.346.357h6.242c.476 0 .862.398.862.889v.36c0 .491-.386.889-.862.889H1.862A.876.876 0 011 13.111v-.425a.82.82 0 01.177-.54L4.393 7.8a1.367 1.367 0 00-.006-1.625L1.4 2.194a.822.822 0 01-.18-.544V.89C1.22.398 1.604 0 2.08 0h8.838c.476 0 .861.398.861.889v.36c0 .491-.385.89-.86.89H5.135c-.19 0-.345.159-.345.356a.489.489 0 00.07.216l2.92 3.975c.049.062.063.107.06.188a.246.246 0 01-.062.189z' />\n    </svg>\n  )\n}\n\nexport default SvgTypeFormula\n","import React from 'react'\n\nfunction SvgTypeRelation(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M4.5 1v2h5.086L1 11.586 2.414 13 11 4.414V9.5h2V1z' />\n    </svg>\n  )\n}\n\nexport default SvgTypeRelation\n","import React from 'react'\n\nfunction SvgTypePerson2(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M13.125 10.035c-.571-.55-2.324-1.504-3.5-2.16v-.834c.224-.322.42-.671.566-1.055.394-.242.746-.702.746-1.173 0-.458-.005-.87-.47-1.208C10.305 1.558 9.436 0 7 0S3.695 1.558 3.533 3.605c-.465.338-.47.75-.47 1.208 0 .471.352.93.746 1.173.146.384.342.733.566 1.055v.834c-1.176.656-2.929 1.61-3.5 2.16C.165 10.72 0 11.812 0 14h14c0-2.188-.164-3.281-.875-3.965z' />\n    </svg>\n  )\n}\n\nexport default SvgTypePerson2\n","import React from 'react'\n\nfunction SvgTypeTimestamp(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M6.986 14c-1.79 0-3.582-.69-4.944-2.068-2.723-2.72-2.723-7.172 0-9.892 2.725-2.72 7.182-2.72 9.906 0A6.972 6.972 0 0114 6.996c0 1.88-.728 3.633-2.052 4.955A7.058 7.058 0 016.986 14zm3.285-6.99v1.645H5.526v-5.47h1.841v3.63h2.904v.194zm1.89-.014c0-1.379-.542-2.67-1.522-3.648-2.006-2.005-5.287-2.007-7.297-.009l-.009.009a5.168 5.168 0 000 7.295c2.01 2.007 5.297 2.007 7.306 0a5.119 5.119 0 001.521-3.647z' />\n    </svg>\n  )\n}\n\nexport default SvgTypeTimestamp\n","import React from 'react'\nimport { PropertyType } from 'notion-types'\n\nimport TitleIcon from './type-title'\nimport TextIcon from './type-text'\nimport NumberIcon from './type-number'\nimport SelectIcon from './type-select'\nimport MultiSelectIcon from './type-multi-select'\nimport DateIcon from './type-date'\nimport PersonIcon from './type-person'\nimport FileIcon from './type-file'\nimport CheckboxIcon from './type-checkbox'\nimport UrlIcon from './type-url'\nimport EmailIcon from './type-email'\nimport PhoneNumberIcon from './type-phone-number'\nimport FormulaIcon from './type-formula'\nimport RelationIcon from './type-relation'\nimport Person2Icon from './type-person-2'\nimport TimestampIcon from './type-timestamp'\n\ninterface PropertyIconProps {\n  className?: string\n  type: PropertyType\n}\n\nconst iconMap = {\n  title: TitleIcon,\n  text: TextIcon,\n  number: NumberIcon,\n  select: SelectIcon,\n  multi_select: MultiSelectIcon,\n  date: DateIcon,\n  person: PersonIcon,\n  file: FileIcon,\n  checkbox: CheckboxIcon,\n  url: UrlIcon,\n  email: EmailIcon,\n  phone_number: PhoneNumberIcon,\n  formula: FormulaIcon,\n  relation: RelationIcon,\n  created_time: TimestampIcon,\n  last_edited_time: TimestampIcon,\n  created_by: Person2Icon,\n  last_edited_by: Person2Icon\n}\n\nexport const PropertyIcon: React.FC<PropertyIconProps> = ({\n  type,\n  ...rest\n}) => {\n  const icon = iconMap[type] as any\n  if (!icon) return null\n\n  return icon(rest)\n}\n","import React from 'react'\nimport * as types from 'notion-types'\nimport formatNumber from 'format-number'\nimport format from 'date-fns/format'\n\nimport { cs } from '../utils'\nimport { useNotionContext } from '../context'\nimport { Checkbox } from '../components/checkbox'\nimport { Text } from '../components/text'\nimport { PageTitle } from '../components/page-title'\nimport { GracefulImage } from '../components/graceful-image'\nimport { evalFormula } from './eval-formula'\n\n/**\n * Renders a single value of structured Notion data according to its schema.\n *\n * This corresponds to rendering the content of a single cell in a table.\n * Property rendering is re-used across all the different types of collection views.\n */\nexport const Property: React.FC<{\n  schema?: types.CollectionPropertySchema\n  data?: types.Decoration[]\n  block?: types.Block\n  collection?: types.Collection\n  inline?: boolean\n}> = ({ schema, data, block, collection, inline = false }) => {\n  const { components, mapImageUrl, mapPageUrl } = useNotionContext()\n\n  if (schema) {\n    let content = null\n\n    if (\n      data ||\n      schema.type === 'checkbox' ||\n      schema.type === 'title' ||\n      schema.type === 'formula' ||\n      schema.type === 'created_by' ||\n      schema.type === 'last_edited_by' ||\n      schema.type === 'created_time' ||\n      schema.type === 'last_edited_time'\n    ) {\n      switch (schema.type) {\n        case 'relation':\n          // console.log('relation', schema, data)\n          content = <Text value={data} block={block} />\n          break\n\n        case 'formula':\n          // TODO\n          // console.log('formula', schema.formula, {\n          //   schema: collection?.schema,\n          //   properties: block?.properties\n          // })\n\n          try {\n            content = evalFormula(schema.formula, {\n              schema: collection?.schema,\n              properties: block?.properties\n            })\n\n            if (isNaN(content)) {\n              // console.log('NaN', schema.formula)\n            }\n\n            if (content instanceof Date) {\n              content = format(content, 'MMM d, YYY hh:mm aa')\n            }\n          } catch (err) {\n            // console.log('error evaluating formula', schema.formula, err)\n            content = null\n          }\n          break\n\n        case 'title':\n          if (block) {\n            content = (\n              <components.PageLink\n                className={cs('notion-page-link')}\n                href={mapPageUrl(block.id)}\n              >\n                <PageTitle block={block} />\n              </components.PageLink>\n            )\n          } else {\n            content = <Text value={data} block={block} />\n          }\n          break\n\n        case 'select':\n        // intentional fallthrough\n        case 'multi_select': {\n          const values = (data[0][0] || '').split(',')\n\n          content = values.map((value, index) => {\n            const option = schema.options?.find(\n              (option) => value === option.value\n            )\n            const color = option?.color\n\n            return (\n              <div\n                key={index}\n                className={cs(\n                  `notion-property-${schema.type}-item`,\n                  color && `notion-item-${color}`\n                )}\n              >\n                {value}\n              </div>\n            )\n          })\n          break\n        }\n\n        case 'person':\n          // console.log('person', schema, data)\n          content = <Text value={data} block={block} />\n          break\n\n        case 'file': {\n          // TODO: assets should be previewable via image-zoom\n          const files = data\n            .filter((v) => v.length === 2)\n            .map((f) => f.flat().flat())\n\n          content = files.map((file, i) => (\n            <components.Link\n              key={i}\n              className='notion-property-file'\n              href={mapImageUrl(file[2] as string, block)}\n              target='_blank'\n              rel='noreferrer noopener'\n            >\n              <GracefulImage\n                alt={file[0] as string}\n                src={mapImageUrl(file[2] as string, block)}\n                loading='lazy'\n              />\n            </components.Link>\n          ))\n\n          break\n        }\n\n        case 'checkbox': {\n          const isChecked = data && data[0][0] === 'Yes'\n\n          return (\n            <div className='notion-property-checkbox-container'>\n              <Checkbox isChecked={isChecked} blockId={undefined} />\n              <span className='notion-property-checkbox-text'>\n                {schema.name}\n              </span>\n            </div>\n          )\n        }\n\n        case 'url': {\n          // TODO: refactor to less hackyh solution\n          const d = JSON.parse(JSON.stringify(data))\n\n          if (inline) {\n            try {\n              const url = new URL(d[0][0])\n              d[0][0] = url.hostname.replace(/^www\\./, '')\n            } catch (err) {\n              // ignore invalid urls\n            }\n          }\n\n          content = (\n            <Text\n              value={d}\n              block={block}\n              inline={inline}\n              linkProps={{\n                target: '_blank',\n                rel: 'noreferrer noopener'\n              }}\n            />\n          )\n          break\n        }\n\n        case 'email':\n          content = <Text value={data} linkProtocol='mailto' block={block} />\n          break\n\n        case 'phone_number':\n          content = <Text value={data} linkProtocol='tel' block={block} />\n          break\n\n        case 'number': {\n          const value = parseFloat(data[0][0] || '0')\n          let breakEarly = false\n          let output = ''\n\n          if (isNaN(value)) {\n            content = <Text value={data} block={block} />\n          } else {\n            switch (schema.number_format) {\n              case 'number_with_commas':\n                output = formatNumber()(value)\n                break\n              case 'percent':\n                output = formatNumber({ suffix: '%' })(value * 100)\n                break\n              case 'dollar':\n                output = formatNumber({ prefix: '$', round: 2, padRight: 2 })(\n                  value\n                )\n                break\n              case 'euro':\n                output = formatNumber({ prefix: '€', round: 2, padRight: 2 })(\n                  value\n                )\n                break\n              case 'pound':\n                output = formatNumber({ prefix: '£', round: 2, padRight: 2 })(\n                  value\n                )\n                break\n              case 'yen':\n                output = formatNumber({ prefix: '¥', round: 0 })(value)\n                break\n              case 'rupee':\n                output = formatNumber({ prefix: '₹', round: 2, padRight: 2 })(\n                  value\n                )\n                break\n              case 'won':\n                output = formatNumber({ prefix: '₩', round: 0 })(value)\n                break\n              case 'yuan':\n                output = formatNumber({ prefix: 'CN¥', round: 2, padRight: 2 })(\n                  value\n                )\n                break\n              default:\n                content = <Text value={data} block={block} />\n                breakEarly = true\n                break\n            }\n\n            if (!breakEarly) {\n              content = <Text value={[[output]]} block={block} />\n            }\n          }\n\n          break\n        }\n\n        case 'created_time':\n          content = format(new Date(block?.created_time), 'MMM d, YYY hh:mm aa')\n          break\n\n        case 'last_edited_time':\n          content = format(\n            new Date(block?.last_edited_time),\n            'MMM d, YYY hh:mm aa'\n          )\n          break\n\n        case 'created_by':\n          // console.log('created_by', schema, data)\n          break\n\n        case 'last_edited_by':\n          // console.log('last_edited_by', schema, data)\n          break\n\n        default:\n          content = <Text value={data} block={block} />\n          break\n      }\n    }\n\n    return (\n      <span className={`notion-property notion-property-${schema.type}`}>\n        {content}\n      </span>\n    )\n  }\n\n  return null\n}\n","import { Block, BlockMap } from 'notion-types'\nimport isUrl from 'is-url-superb'\n\nexport const defaultMapImageUrl = (url: string, block: Block) => {\n  if (!url) {\n    return null\n  }\n\n  if (url.startsWith('data:')) {\n    return url\n  }\n\n  // more recent versions of notion don't proxy unsplash images\n  if (url.startsWith('https://images.unsplash.com')) {\n    return url\n  }\n\n  if (url.startsWith('/images')) {\n    url = `https://www.notion.so${url}`\n  }\n\n  url = `https://www.notion.so${\n    url.startsWith('/image') ? url : `/image/${encodeURIComponent(url)}`\n  }`\n\n  const notionImageUrlV2 = new URL(url)\n  let table = block.parent_table === 'space' ? 'block' : block.parent_table\n  if (table === 'collection') {\n    table = 'block'\n  }\n  notionImageUrlV2.searchParams.set('table', table)\n  notionImageUrlV2.searchParams.set('id', block.id)\n  notionImageUrlV2.searchParams.set('cache', 'v2')\n\n  url = notionImageUrlV2.toString()\n\n  return url\n}\n\nexport const defaultMapPageUrl = (rootPageId?: string) => (pageId: string) => {\n  pageId = (pageId || '').replace(/-/g, '')\n\n  if (rootPageId && pageId === rootPageId) {\n    return '/'\n  } else {\n    return `/${pageId}`\n  }\n}\n\nexport const cs = (...classes: Array<string | undefined | false>) =>\n  classes.filter((a) => !!a).join(' ')\n\nconst groupBlockContent = (blockMap: BlockMap): string[][] => {\n  const output: string[][] = []\n\n  let lastType: string | undefined = undefined\n  let index = -1\n\n  Object.keys(blockMap).forEach((id) => {\n    const blockValue = blockMap[id]?.value\n\n    if (blockValue) {\n      blockValue.content?.forEach((blockId) => {\n        const blockType = blockMap[blockId]?.value?.type\n\n        if (blockType && blockType !== lastType) {\n          index++\n          lastType = blockType\n          output[index] = []\n        }\n\n        if (index > -1) {\n          output[index].push(blockId)\n        }\n      })\n    }\n\n    lastType = undefined\n  })\n\n  return output\n}\n\nexport const getListNumber = (blockId: string, blockMap: BlockMap) => {\n  const groups = groupBlockContent(blockMap)\n  const group = groups.find((g) => g.includes(blockId))\n\n  if (!group) {\n    return\n  }\n\n  return group.indexOf(blockId) + 1\n}\n\nexport const getHashFragmentValue = (url: string) => {\n  return url.includes('#') ? url.replace(/^.+(#.+)$/, '$1') : ''\n}\n\nconst months = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec'\n]\n\nexport const formatDate = (input: string) => {\n  const date = new Date(input)\n  const month = date.getMonth()\n  return `${months[month]} ${date.getUTCDate()}, ${date.getUTCFullYear()}`\n}\n\nexport const isBrowser = typeof window !== 'undefined'\n\nexport { isUrl }\n\nconst youtubeDomains = new Set([\n  'youtu.be',\n  'youtube.com',\n  'www.youtube.com',\n  'youtube-nocookie.com',\n  'www.youtube-nocookie.com'\n])\n\nexport const getYoutubeId = (url: string): string | null => {\n  try {\n    const { hostname } = new URL(url)\n    if (!youtubeDomains.has(hostname)) {\n      return null\n    }\n    const regExp =\n      /^.*(youtu\\.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/i\n\n    const match = url.match(regExp)\n    if (match && match[2].length == 11) {\n      return match[2]\n    }\n  } catch {\n    // ignore invalid urls\n  }\n\n  return null\n}\n","import React from 'react'\nimport { ExtendedRecordMap } from 'notion-types'\nimport { wrapNextImage, wrapNextLink } from './next'\nimport { AssetWrapper } from './components/asset-wrapper'\n\nimport {\n  MapPageUrl,\n  MapImageUrl,\n  SearchNotion,\n  NotionComponents\n} from './types'\nimport { defaultMapPageUrl, defaultMapImageUrl } from './utils'\nimport { Checkbox as DefaultCheckbox } from './components/checkbox'\n\nexport interface NotionContext {\n  recordMap: ExtendedRecordMap\n  components: NotionComponents\n\n  mapPageUrl: MapPageUrl\n  mapImageUrl: MapImageUrl\n  searchNotion?: SearchNotion\n\n  rootPageId?: string\n  rootDomain?: string\n\n  fullPage: boolean\n  darkMode: boolean\n  previewImages: boolean\n  forceCustomImages: boolean\n  showCollectionViewDropdown: boolean\n  showTableOfContents: boolean\n  minTableOfContentsItems: number\n\n  defaultPageIcon?: string\n  defaultPageCover?: string\n  defaultPageCoverPosition?: number\n\n  zoom: any\n}\n\nexport interface PartialNotionContext {\n  recordMap?: ExtendedRecordMap\n  components?: Partial<NotionComponents>\n\n  mapPageUrl?: MapPageUrl\n  mapImageUrl?: MapImageUrl\n  searchNotion?: SearchNotion\n\n  rootPageId?: string\n  rootDomain?: string\n\n  fullPage?: boolean\n  darkMode?: boolean\n  previewImages?: boolean\n  forceCustomImages?: boolean\n  showCollectionViewDropdown?: boolean\n\n  showTableOfContents?: boolean\n  minTableOfContentsItems?: number\n\n  defaultPageIcon?: string\n  defaultPageCover?: string\n  defaultPageCoverPosition?: number\n\n  zoom?: any\n}\n\nconst DefaultLink: React.FC = (props) => (\n  <a target='_blank' rel='noopener noreferrer' {...props} />\n)\nconst DefaultPageLink: React.FC = (props) => <a {...props} />\n\nconst DefaultEmbed = AssetWrapper\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const dummyLink = ({ href, rel, target, title, ...rest }) => (\n  <span {...rest} />\n)\n\nconst dummyComponent = (name: string) => () => {\n  console.warn(\n    `Warning: using empty component \"${name}\" (you should override this in NotionRenderer.components)`\n  )\n\n  return null\n}\n\nconst defaultComponents: NotionComponents = {\n  Image: null, // disable custom images by default\n  Link: DefaultLink,\n  PageLink: DefaultPageLink,\n  Checkbox: DefaultCheckbox,\n\n  Code: dummyComponent('Code'),\n  Equation: dummyComponent('Equation'),\n\n  Collection: dummyComponent('Collection'),\n\n  Pdf: dummyComponent('Pdf'),\n  Tweet: dummyComponent('Tweet'),\n  Modal: dummyComponent('Modal'),\n\n  Embed: DefaultEmbed\n}\n\nconst defaultNotionContext: NotionContext = {\n  recordMap: {\n    block: {},\n    collection: {},\n    collection_view: {},\n    collection_query: {},\n    notion_user: {},\n    signed_urls: {}\n  },\n\n  components: defaultComponents,\n\n  mapPageUrl: defaultMapPageUrl(),\n  mapImageUrl: defaultMapImageUrl,\n  searchNotion: null,\n\n  fullPage: false,\n  darkMode: false,\n  previewImages: false,\n  forceCustomImages: false,\n  showCollectionViewDropdown: true,\n\n  showTableOfContents: false,\n  minTableOfContentsItems: 3,\n\n  defaultPageIcon: null,\n  defaultPageCover: null,\n  defaultPageCoverPosition: 0.5,\n\n  zoom: null\n}\n\nconst ctx = React.createContext<NotionContext>(defaultNotionContext)\n\nexport const NotionContextProvider: React.SFC<PartialNotionContext> = ({\n  components: themeComponents = {},\n  children,\n  mapPageUrl,\n  mapImageUrl,\n  rootPageId,\n  ...rest\n}) => {\n  for (const key of Object.keys(rest)) {\n    if (rest[key] === undefined) {\n      delete rest[key]\n    }\n  }\n\n  const wrappedThemeComponents = {\n    ...themeComponents\n  }\n\n  if (wrappedThemeComponents.nextImage) {\n    wrappedThemeComponents.Image = wrapNextImage(themeComponents.nextImage)\n  }\n\n  if (wrappedThemeComponents.nextLink) {\n    wrappedThemeComponents.nextLink = wrapNextLink(themeComponents.nextLink)\n  }\n\n  // ensure the user can't override default components with falsy values\n  // since it would result in very difficult-to-debug react errors\n  for (const key of Object.keys(wrappedThemeComponents)) {\n    if (!wrappedThemeComponents[key]) {\n      delete wrappedThemeComponents[key]\n    }\n  }\n\n  return (\n    <ctx.Provider\n      value={{\n        ...defaultNotionContext,\n        ...rest,\n        rootPageId,\n        mapPageUrl: mapPageUrl ?? defaultMapPageUrl(rootPageId),\n        mapImageUrl: mapImageUrl ?? defaultMapImageUrl,\n        components: { ...defaultComponents, ...wrappedThemeComponents }\n      }}\n    >\n      {children}\n    </ctx.Provider>\n  )\n}\n\nexport const NotionContextConsumer = ctx.Consumer\n\nexport const useNotionContext = (): NotionContext => {\n  return React.useContext(ctx)\n}\n","import React from 'react'\n\nexport const wrapNextImage = (NextImage: any): React.FC<any> =>\n  function ReactNotionXNextImage({\n    src,\n    alt,\n\n    width,\n    height,\n\n    className,\n    style,\n\n    layout,\n\n    ...rest\n  }) {\n    if (!layout) {\n      layout = width && height ? 'intrinsic' : 'fill'\n    }\n\n    return (\n      <NextImage\n        className={className}\n        src={src}\n        alt={alt}\n        width={layout === 'intrinsic' && width}\n        height={layout === 'intrinsic' && height}\n        objectFit={style?.objectFit}\n        objectPosition={style?.objectPosition}\n        layout={layout}\n        {...rest}\n      />\n    )\n  }\n\nexport const wrapNextLink = (NextLink: any): React.FC<any> =>\n  function ReactNotionXNextLink({\n    href,\n    as,\n    passHref,\n    prefetch,\n    replace,\n    scroll,\n    shallow,\n    locale,\n    ...linkProps\n  }) {\n    return (\n      <NextLink\n        href={href}\n        as={as}\n        passHref={passHref}\n        prefetch={prefetch}\n        replace={replace}\n        scroll={scroll}\n        shallow={shallow}\n        locale={locale}\n      >\n        <a {...linkProps} />\n      </NextLink>\n    )\n  }\n","import React from 'react'\nimport { BaseContentBlock, Block } from 'notion-types'\nimport { Asset } from './asset'\nimport { cs } from '../utils'\nimport { Text } from './text'\nimport { useNotionContext } from '..'\nimport { parsePageId } from 'notion-utils'\n\nexport const AssetWrapper: React.FC<{\n  blockId: string\n  block: Block\n}> = ({ blockId, block }) => {\n  const value = block as BaseContentBlock\n  const { components, mapPageUrl, rootDomain } = useNotionContext()\n\n  let isURL = false\n  if (value?.properties?.caption?.length > 0) {\n    const caption: string = value?.properties?.caption[0][0]\n    const id = parsePageId(caption, { uuid: true })\n\n    const isPage = caption.charAt(0) === '/' && id\n    if ((block.type == 'image' && isValidURL(caption)) || isPage) {\n      isURL = true\n    }\n  }\n\n  const figure = (\n    <figure\n      className={cs(\n        'notion-asset-wrapper',\n        `notion-asset-wrapper-${block.type}`,\n        value.format?.block_full_width && 'notion-asset-wrapper-full',\n        blockId\n      )}\n    >\n      <Asset block={value}>\n        {value?.properties?.caption && !isURL && (\n          <figcaption className='notion-asset-caption'>\n            <Text value={value.properties.caption} block={block} />\n          </figcaption>\n        )}\n      </Asset>\n    </figure>\n  )\n\n  // allows for an image to be a link\n  if (isURL) {\n    const caption: string = value?.properties?.caption[0][0]\n    const id = parsePageId(caption, { uuid: true })\n    const isPage = caption.charAt(0) === '/' && id\n    const captionHostname = extractHostname(caption)\n\n    return (\n      <components.PageLink\n        style={{ width: '100%' }}\n        href={isPage ? mapPageUrl(id) : caption}\n        target={\n          captionHostname &&\n          captionHostname !== rootDomain &&\n          !caption.startsWith('/')\n            ? 'blank_'\n            : null\n        }\n      >\n        {figure}\n      </components.PageLink>\n    )\n  }\n\n  return <>{figure}</>\n}\n\nfunction isValidURL(str) {\n  // TODO: replace this with a more well-tested package\n  const pattern = new RegExp(\n    '^(https?:\\\\/\\\\/)?' + // protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n      '(\\\\#[-a-z\\\\d_]*)?$',\n    'i'\n  )\n  return !!pattern.test(str)\n}\n\nfunction extractHostname(url) {\n  try {\n    const hostname = new URL(url).hostname\n    return hostname\n  } catch (err) {\n    return ''\n  }\n}\n","import React from 'react'\nimport { BaseContentBlock, Block } from 'notion-types'\nimport { getTextContent } from 'notion-utils'\n\nimport { useNotionContext } from '../context'\nimport { LazyImage } from './lazy-image'\nimport { LiteYouTubeEmbed } from './lite-youtube-embed'\nimport { getYoutubeId } from '../utils'\n\nconst isServer = typeof window === 'undefined'\n\nconst types = [\n  'video',\n  'image',\n  'embed',\n  'figma',\n  'typeform',\n  'excalidraw',\n  'maps',\n  'tweet',\n  'pdf',\n  'gist',\n  'codepen',\n  'drive'\n]\n\nexport const Asset: React.FC<{\n  block: BaseContentBlock\n  children: any\n}> = ({ block, children }) => {\n  const { recordMap, mapImageUrl, components } = useNotionContext()\n\n  if (!block || !types.includes(block.type)) {\n    return null\n  }\n\n  const style: React.CSSProperties = {\n    position: 'relative',\n    display: 'flex',\n    justifyContent: 'center',\n    alignSelf: 'center',\n    width: '100%',\n    maxWidth: '100%',\n    flexDirection: 'column'\n  }\n\n  const assetStyle: React.CSSProperties = {}\n  // console.log('asset', block)\n\n  if (block.format) {\n    const {\n      block_aspect_ratio,\n      block_height,\n      block_width,\n      block_full_width,\n      block_page_width,\n      block_preserve_scale\n    } = block.format\n\n    if (block_full_width || block_page_width) {\n      if (block_full_width) {\n        style.width = '100vw'\n      } else {\n        style.width = '100%'\n      }\n\n      if (block.type === 'video') {\n        if (block_height) {\n          style.height = block_height\n        } else if (block_aspect_ratio) {\n          style.paddingBottom = `${block_aspect_ratio * 100}%`\n        } else if (block_preserve_scale) {\n          style.objectFit = 'contain'\n        }\n      } else if (block_aspect_ratio && block.type !== 'image') {\n        // console.log(block.type, block)\n        style.paddingBottom = `${block_aspect_ratio * 100}%`\n      } else if (block_height) {\n        style.height = block_height\n      } else if (block_preserve_scale) {\n        if (block.type === 'image') {\n          style.height = '100%'\n        } else {\n          // TODO: this is just a guess\n          style.paddingBottom = '75%'\n          style.minHeight = 100\n        }\n      }\n    } else {\n      if (block_width) {\n        style.width = block_width\n      }\n\n      if (block_preserve_scale && block.type !== 'image') {\n        style.paddingBottom = '50%'\n        style.minHeight = 100\n      } else {\n        if (block_height && block.type !== 'image') {\n          style.height = block_height\n        }\n      }\n    }\n\n    if (block.type === 'image') {\n      assetStyle.objectFit = 'cover'\n    } else if (block_preserve_scale) {\n      assetStyle.objectFit = 'contain'\n    }\n  }\n\n  const source = block.properties?.source?.[0]?.[0]\n  let content = null\n\n  if (block.type === 'tweet') {\n    const src = source\n    if (!src) return null\n\n    const id = src.split('?')[0].split('/').pop()\n    if (!id) return null\n\n    content = (\n      <div\n        style={{\n          ...assetStyle,\n          maxWidth: 420,\n          width: '100%',\n          marginLeft: 'auto',\n          marginRight: 'auto'\n        }}\n      >\n        <components.Tweet id={id} />\n      </div>\n    )\n  } else if (block.type === 'pdf') {\n    style.overflow = 'auto'\n    style.padding = '8px 16px'\n    style.background = 'rgb(226, 226, 226)'\n\n    if (!isServer) {\n      const signedUrl = recordMap.signed_urls?.[block.id]\n      if (!signedUrl) return null\n      // console.log('pdf', block, signedUrl)\n\n      content = <components.Pdf file={signedUrl} />\n    }\n  } else if (\n    block.type === 'embed' ||\n    block.type === 'video' ||\n    block.type === 'figma' ||\n    block.type === 'typeform' ||\n    block.type === 'gist' ||\n    block.type === 'maps' ||\n    block.type === 'excalidraw' ||\n    block.type === 'codepen' ||\n    block.type === 'drive'\n  ) {\n    const signedUrl = recordMap.signed_urls[block.id]\n\n    if (\n      block.type === 'video' &&\n      signedUrl &&\n      signedUrl.indexOf('youtube') < 0 &&\n      signedUrl.indexOf('youtu.be') < 0 &&\n      signedUrl.indexOf('vimeo') < 0 &&\n      signedUrl.indexOf('wistia') < 0 &&\n      signedUrl.indexOf('loom') < 0 &&\n      signedUrl.indexOf('videoask') < 0 &&\n      signedUrl.indexOf('getcloudapp') < 0\n    ) {\n      content = (\n        <video\n          playsInline\n          controls\n          preload='metadata'\n          style={assetStyle}\n          src={signedUrl}\n          title={block.type}\n        />\n      )\n    } else {\n      let src = block.format?.display_source ?? source\n\n      if (src) {\n        const youtubeVideoId: string | null =\n          block.type === 'video' ? getYoutubeId(src) : null\n\n        console.log({ youtubeVideoId, src, format: block.format, style })\n\n        if (youtubeVideoId) {\n          content = (\n            <LiteYouTubeEmbed\n              id={youtubeVideoId}\n              style={assetStyle}\n              className='notion-asset-object-fit'\n            />\n          )\n        } else if (block.type === 'gist') {\n          if (!src.endsWith('.pibb')) {\n            src = `${src}.pibb`\n          }\n\n          assetStyle.width = '100%'\n          style.paddingBottom = '50%'\n\n          // TODO: GitHub gists do not resize their height properly\n          content = (\n            <iframe\n              style={assetStyle}\n              className='notion-asset-object-fit'\n              src={src}\n              title='GitHub Gist'\n              frameBorder='0'\n              // TODO: is this sandbox necessary?\n              // sandbox='allow-scripts allow-popups allow-top-navigation-by-user-activation allow-forms allow-same-origin'\n              // this is important for perf but react's TS definitions don't seem to like it\n              loading='lazy'\n              scrolling='auto'\n            />\n          )\n        } else {\n          content = (\n            <iframe\n              className='notion-asset-object-fit'\n              style={assetStyle}\n              src={src}\n              title={`iframe ${block.type}`}\n              frameBorder='0'\n              // TODO: is this sandbox necessary?\n              // sandbox='allow-scripts allow-popups allow-top-navigation-by-user-activation allow-forms allow-same-origin'\n              allowFullScreen\n              // this is important for perf but react's TS definitions don't seem to like it\n              loading='lazy'\n            />\n          )\n        }\n      }\n    }\n  } else if (block.type === 'image') {\n    // console.log('image', block)\n\n    const signedUrl = recordMap.signed_urls?.[block.id]\n    const src = mapImageUrl(signedUrl || source, block as Block)\n    const caption = getTextContent(block.properties?.caption)\n    const alt = caption || 'notion image'\n\n    content = (\n      <LazyImage\n        src={src}\n        alt={alt}\n        zoomable={true}\n        height={style.height as number}\n        style={assetStyle}\n      />\n    )\n  }\n\n  return (\n    <>\n      <div style={style}>\n        {content}\n        {block.type === 'image' && children}\n      </div>\n\n      {block.type !== 'image' && children}\n    </>\n  )\n}\n","import React from 'react'\nimport { LazyImageFull, ImageState } from 'react-lazy-images'\nimport { normalizeUrl } from 'notion-utils'\nimport { useNotionContext } from '../context'\nimport { cs } from '../utils'\n\n/**\n * Progressive, lazy images modeled after Medium's LQIP technique.\n */\nexport const LazyImage: React.FC<{\n  src?: string\n  alt?: string\n  className?: string\n  style?: React.CSSProperties\n  height?: number\n  zoomable?: boolean\n  priority?: boolean\n}> = ({\n  src,\n  alt,\n  className,\n  style,\n  zoomable = false,\n  priority = false,\n  height,\n  ...rest\n}) => {\n  const { recordMap, zoom, previewImages, forceCustomImages, components } =\n    useNotionContext()\n\n  const zoomRef = React.useRef(zoom ? zoom.clone() : null)\n  const previewImage = previewImages\n    ? recordMap?.preview_images?.[src] ??\n      recordMap?.preview_images?.[normalizeUrl(src)]\n    : null\n\n  const onLoad = React.useCallback(\n    (e: any) => {\n      if (zoomable && (e.target.src || e.target.srcset)) {\n        if (zoomRef.current) {\n          ;(zoomRef.current as any).attach(e.target)\n        }\n      }\n    },\n    [zoomRef, zoomable]\n  )\n\n  const attachZoom = React.useCallback(\n    (image: any) => {\n      if (zoomRef.current && image) {\n        ;(zoomRef.current as any).attach(image)\n      }\n    },\n    [zoomRef]\n  )\n\n  const attachZoomRef = React.useMemo(\n    () => (zoomable ? attachZoom : undefined),\n    [zoomable, attachZoom]\n  )\n\n  if (previewImage) {\n    const aspectRatio = previewImage.originalHeight / previewImage.originalWidth\n\n    if (components.Image) {\n      // TODO: could try using next/image onLoadComplete to replace LazyImageFull\n      // while retaining our blur implementation\n      return (\n        <components.Image\n          src={src}\n          alt={alt}\n          style={style}\n          className={className}\n          width={previewImage.originalWidth}\n          height={previewImage.originalHeight}\n          blurDataURL={previewImage.dataURIBase64}\n          placeholder='blur'\n          priority={priority}\n          onLoad={onLoad}\n        />\n      )\n    }\n\n    return (\n      <LazyImageFull src={src} {...rest} experimentalDecode={true}>\n        {({ imageState, ref }) => {\n          const isLoaded = imageState === ImageState.LoadSuccess\n          const wrapperStyle: React.CSSProperties = {\n            width: '100%'\n          }\n          const imgStyle: React.CSSProperties = {}\n\n          if (height) {\n            wrapperStyle.height = height\n          } else {\n            imgStyle.position = 'absolute'\n            wrapperStyle.paddingBottom = `${aspectRatio * 100}%`\n          }\n\n          return (\n            <div\n              className={cs(\n                'lazy-image-wrapper',\n                isLoaded && 'lazy-image-loaded',\n                className\n              )}\n              style={wrapperStyle}\n            >\n              <img\n                className='lazy-image-preview'\n                src={previewImage.dataURIBase64}\n                alt={alt}\n                ref={ref}\n                style={style}\n                decoding='async'\n              />\n\n              <img\n                className='lazy-image-real'\n                src={src}\n                alt={alt}\n                ref={attachZoomRef}\n                style={{\n                  ...style,\n                  ...imgStyle\n                }}\n                width={previewImage.originalWidth}\n                height={previewImage.originalHeight}\n                decoding='async'\n                loading='lazy'\n              />\n            </div>\n          )\n        }}\n      </LazyImageFull>\n    )\n  } else {\n    // TODO: GracefulImage doesn't seem to support refs, but we'd like to prevent\n    // invalid images from loading as error states\n\n    /*\n      NOTE: Using next/image without a pre-defined width/height is a huge pain in\n      the ass. If we have a preview image, then this works fine since we know the\n      dimensions ahead of time, but if we don't, then next/image won't display\n      anything.\n      \n      Since next/image is the most common use case for using custom images, and this \n      is likely to trip people up, we're disabling non-preview custom images for now.\n\n      If you have a use case that is affected by this, please open an issue on github.\n    */\n    if (components.Image && forceCustomImages) {\n      return (\n        <components.Image\n          src={src}\n          alt={alt}\n          className={className}\n          style={style}\n          width={null}\n          height={height || null}\n          priority={priority}\n          onLoad={onLoad}\n        />\n      )\n    }\n\n    // Default image element\n    return (\n      <img\n        className={className}\n        style={style}\n        src={src}\n        alt={alt}\n        ref={attachZoomRef}\n        loading='lazy'\n        decoding='async'\n        {...rest}\n      />\n    )\n  }\n}\n","import React from 'react'\nimport { cs } from '../utils'\n\nconst qs = (params: Record<string, string>) => {\n  return Object.keys(params)\n    .map(\n      (key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`\n    )\n    .join('&')\n}\n\nexport const LiteYouTubeEmbed: React.FC<{\n  id: string\n  defaultPlay?: boolean\n  mute?: boolean\n  lazyImage?: boolean\n  iframeTitle?: string\n  alt?: string\n  params?: Record<string, string>\n  adLinksPreconnect?: boolean\n  style?: React.CSSProperties\n  className?: string\n}> = ({\n  id,\n  defaultPlay = false,\n  mute = false,\n  lazyImage = false,\n  iframeTitle = 'YouTube video',\n  alt = 'Video preview',\n  params = {},\n  adLinksPreconnect = true,\n  style,\n  className\n}) => {\n  const muteParam = mute || defaultPlay ? '1' : '0' // Default play must be muted\n  const queryString = React.useMemo(\n    () => qs({ autoplay: '1', mute: muteParam, ...params }),\n    [muteParam, params]\n  )\n  // const mobileResolution = 'hqdefault'\n  // const desktopResolution = 'maxresdefault'\n  const resolution = 'hqdefault'\n  const posterUrl = `https://i.ytimg.com/vi/${id}/${resolution}.jpg`\n  const ytUrl = 'https://www.youtube-nocookie.com'\n  const iframeSrc = `${ytUrl}/embed/${id}?${queryString}`\n\n  const [isPreconnected, setIsPreconnected] = React.useState(false)\n  const [iframeInitialized, setIframeInitialized] = React.useState(defaultPlay)\n  const [isIframeLoaded, setIsIframeLoaded] = React.useState(false)\n\n  const warmConnections = React.useCallback(() => {\n    if (isPreconnected) return\n    setIsPreconnected(true)\n  }, [isPreconnected])\n\n  const onLoadIframe = React.useCallback(() => {\n    if (iframeInitialized) return\n    setIframeInitialized(true)\n  }, [iframeInitialized])\n\n  const onIframeLoaded = React.useCallback(() => {\n    setIsIframeLoaded(true)\n  }, [])\n\n  return (\n    <>\n      <link rel='preload' href={posterUrl} as='image' />\n\n      {isPreconnected && (\n        <>\n          {/* The iframe document and most of its subresources come from youtube.com */}\n          <link rel='preconnect' href={ytUrl} />\n\n          {/* The botguard script is fetched off from google.com */}\n          <link rel='preconnect' href='https://www.google.com' />\n        </>\n      )}\n\n      {isPreconnected && adLinksPreconnect && (\n        <>\n          {/* Not certain if these ad related domains are in the critical path. Could verify with domain-specific throttling. */}\n          <link rel='preconnect' href='https://static.doubleclick.net' />\n          <link rel='preconnect' href='https://googleads.g.doubleclick.net' />\n        </>\n      )}\n\n      <div\n        onClick={onLoadIframe}\n        onPointerOver={warmConnections}\n        className={cs(\n          'notion-yt-lite',\n          isIframeLoaded && 'notion-yt-loaded',\n          iframeInitialized && 'notion-yt-initialized',\n          className\n        )}\n        style={style}\n      >\n        <img\n          src={posterUrl}\n          className='notion-yt-thumbnail'\n          loading={lazyImage ? 'lazy' : undefined}\n          alt={alt}\n        />\n\n        <div className='notion-yt-playbtn' />\n\n        {iframeInitialized && (\n          <iframe\n            width='560'\n            height='315'\n            frameBorder='0'\n            allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture'\n            allowFullScreen\n            title={iframeTitle}\n            src={iframeSrc}\n            onLoad={onIframeLoaded}\n          />\n        )}\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { Block, Decoration, ExternalObjectInstance } from 'notion-types'\nimport { parsePageId } from 'notion-utils'\n\nimport { useNotionContext } from '../context'\nimport { formatDate, getHashFragmentValue } from '../utils'\nimport { PageTitle } from './page-title'\nimport { GracefulImage } from './graceful-image'\nimport { ExternalComponentGithub } from './external-component-github'\n\n/**\n * Renders a single piece of Notion text, including basic rich text formatting.\n *\n * These represent the innermost leaf nodes of a Notion subtree.\n *\n * TODO: I think this implementation would be more correct if the reduce just added\n * attributes to the final element's style.\n */\nexport const Text: React.FC<{\n  value: Decoration[]\n  block: Block\n  linkProps?: any\n  linkProtocol?: string\n  inline?: boolean // TODO: currently unused\n}> = ({ value, block, linkProps, linkProtocol }) => {\n  const { components, recordMap, mapPageUrl, mapImageUrl, rootDomain } =\n    useNotionContext()\n\n  return (\n    <React.Fragment>\n      {value?.map(([text, decorations], index) => {\n        // TODO: sometimes notion shows a max of N items to prevent overflow\n        // if (trim && index > 18) {\n        //   return null\n        // }\n\n        if (!decorations) {\n          if (text === ',') {\n            return <span key={index} style={{ padding: '0.5em' }} />\n          } else {\n            return <React.Fragment key={index}>{text}</React.Fragment>\n          }\n        }\n\n        const formatted = decorations.reduce((element, decorator) => {\n          switch (decorator[0]) {\n            case 'p': {\n              // link to an internal block (within the current workspace)\n              const blockId = decorator[1]\n              const linkedBlock = recordMap.block[blockId]?.value\n              if (!linkedBlock) {\n                console.log('\"p\" missing block', blockId)\n                return null\n              }\n\n              // console.log('p', blockId)\n\n              return (\n                <components.PageLink\n                  className='notion-link'\n                  href={mapPageUrl(blockId)}\n                >\n                  <PageTitle block={linkedBlock} />\n                </components.PageLink>\n              )\n            }\n\n            case '‣': {\n              // link to an external block (outside of the current workspace)\n              const linkType = decorator[1][0]\n              const id = decorator[1][1]\n\n              switch (linkType) {\n                case 'u': {\n                  const user = recordMap.notion_user[id]?.value\n\n                  if (!user) {\n                    console.log('\"‣\" missing user', id)\n                    return null\n                  }\n\n                  const name = [user.given_name, user.family_name]\n                    .filter(Boolean)\n                    .join(' ')\n\n                  return (\n                    <GracefulImage\n                      className='notion-user'\n                      src={mapImageUrl(user.profile_photo, block)}\n                      alt={name}\n                    />\n                  )\n                }\n\n                default: {\n                  const linkedBlock = recordMap.block[id]?.value\n\n                  if (!linkedBlock) {\n                    console.log('\"‣\" missing block', linkType, id)\n                    return null\n                  }\n\n                  return (\n                    <components.PageLink\n                      className='notion-link'\n                      href={mapPageUrl(id)}\n                      {...linkProps}\n                      target='_blank'\n                      rel='noopener noreferrer'\n                    >\n                      <PageTitle block={linkedBlock} />\n                    </components.PageLink>\n                  )\n                }\n              }\n            }\n\n            case 'h':\n              return <span className={`notion-${decorator[1]}`}>{element}</span>\n\n            case 'c':\n              return <code className='notion-inline-code'>{element}</code>\n\n            case 'b':\n              return <b>{element}</b>\n\n            case 'i':\n              return <em>{element}</em>\n\n            case 's':\n              return <s>{element}</s>\n\n            case '_':\n              return <span className='notion-inline-underscore'>{element}</span>\n\n            case 'e':\n              return <components.Equation math={decorator[1]} inline />\n\n            case 'm':\n              // comment / discussion\n              return element //still need to return the base element\n\n            case 'a': {\n              const v = decorator[1]\n              const pathname = v.substr(1)\n              const id = parsePageId(pathname, { uuid: true })\n\n              if ((v[0] === '/' || v.includes(rootDomain)) && id) {\n                const href = v.includes(rootDomain)\n                  ? v\n                  : `${mapPageUrl(id)}${getHashFragmentValue(v)}`\n\n                return (\n                  <components.PageLink\n                    className='notion-link'\n                    href={href}\n                    {...linkProps}\n                  >\n                    {element}\n                  </components.PageLink>\n                )\n              } else {\n                return (\n                  <components.Link\n                    className='notion-link'\n                    href={\n                      linkProtocol\n                        ? `${linkProtocol}:${decorator[1]}`\n                        : decorator[1]\n                    }\n                    {...linkProps}\n                  >\n                    {element}\n                  </components.Link>\n                )\n              }\n            }\n\n            case 'd': {\n              const v = decorator[1]\n              const type = v?.type\n\n              if (type === 'date') {\n                // Example: Jul 31, 2010\n                const startDate = v.start_date\n\n                return formatDate(startDate)\n              } else if (type === 'daterange') {\n                // Example: Jul 31, 2010 → Jul 31, 2020\n                const startDate = v.start_date\n                const endDate = v.end_date\n\n                return `${formatDate(startDate)} → ${formatDate(endDate)}`\n              } else {\n                return element\n              }\n            }\n\n            case 'u': {\n              const userId = decorator[1]\n              const user = recordMap.notion_user[userId]?.value\n\n              if (!user) {\n                console.log('missing user', userId)\n                return null\n              }\n\n              const name = [user.given_name, user.family_name]\n                .filter(Boolean)\n                .join(' ')\n\n              return (\n                <GracefulImage\n                  className='notion-user'\n                  src={mapImageUrl(user.profile_photo, block)}\n                  alt={name}\n                />\n              )\n            }\n\n            case 'eoi': {\n              const blockId = decorator[1]\n              const externalObjectInstance = recordMap.block[blockId]\n                ?.value as ExternalObjectInstance\n\n              switch (externalObjectInstance?.format?.domain) {\n                case 'github.com':\n                  return (\n                    <ExternalComponentGithub\n                      original_url={externalObjectInstance.format?.original_url}\n                      className={blockId}\n                    />\n                  )\n\n                default:\n                  if (process.env.NODE_ENV !== 'production') {\n                    console.log(\n                      `Unsupported external_object_instance domain ${externalObjectInstance?.format?.domain}: ` +\n                        (block as any).type,\n                      JSON.stringify(block, null, 2)\n                    )\n                  }\n\n                  return <div />\n              }\n            }\n\n            default:\n              if (process.env.NODE_ENV !== 'production') {\n                console.log('unsupported text format', decorator)\n              }\n\n              return element\n          }\n        }, <>{text}</>)\n\n        return <React.Fragment key={index}>{formatted}</React.Fragment>\n      })}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { Block } from 'notion-types'\n\nimport { cs } from '../utils'\nimport { useNotionContext } from '../context'\nimport { Text } from './text'\nimport { PageIcon } from './page-icon'\n\nexport const PageTitle: React.FC<{\n  block: Block\n  className?: string\n  defaultIcon?: string\n}> = ({ block, className, defaultIcon, ...rest }) => {\n  const { recordMap } = useNotionContext()\n\n  if (!block) return null\n\n  // TODO: replace with getBlockTitle\n  if (\n    block.type === 'collection_view_page' ||\n    block.type === 'collection_view'\n  ) {\n    const collection = recordMap.collection[block.collection_id]?.value\n\n    if (collection) {\n      block.properties = {\n        ...block.properties,\n        title: collection.name\n      }\n\n      block.format = {\n        ...block.format,\n        page_icon: collection.icon\n      }\n    }\n  }\n\n  if (!block.properties?.title) {\n    return null\n  }\n\n  return (\n    <span className={cs('notion-page-title', className)} {...rest}>\n      <PageIcon\n        block={block}\n        defaultIcon={defaultIcon}\n        className='notion-page-title-icon'\n      />\n\n      <span className='notion-page-title-text'>\n        <Text value={block.properties?.title} block={block} />\n      </span>\n    </span>\n  )\n}\n","import React from 'react'\nimport { getBlockIcon, getBlockTitle } from 'notion-utils'\nimport { Block, PageBlock, CalloutBlock } from 'notion-types'\n\nimport { cs, isUrl } from '../utils'\nimport { DefaultPageIcon } from '../icons/default-page-icon'\nimport { useNotionContext } from '../context'\n// import { GracefulImage } from './graceful-image'\nimport { LazyImage } from './lazy-image'\n\nconst isIconBlock = (value: Block): value is PageBlock | CalloutBlock => {\n  return (\n    value.type === 'page' ||\n    value.type === 'callout' ||\n    value.type === 'collection_view' ||\n    value.type === 'collection_view_page'\n  )\n}\n\nexport const PageIcon: React.FC<{\n  block: Block\n  className?: string\n  inline?: boolean\n  hideDefaultIcon?: boolean\n  defaultIcon?: string\n}> = ({\n  block,\n  className,\n  inline = true,\n  hideDefaultIcon = false,\n  defaultIcon\n}) => {\n  const { mapImageUrl, recordMap } = useNotionContext()\n  let isImage = false\n  let content: any = null\n\n  if (isIconBlock(block)) {\n    const icon = getBlockIcon(block, recordMap)?.trim() || defaultIcon\n    const title = getBlockTitle(block, recordMap)\n\n    if (icon && isUrl(icon)) {\n      const url = mapImageUrl(icon, block)\n      isImage = true\n\n      content = (\n        <LazyImage\n          src={url}\n          alt={title || 'page icon'}\n          className={cs(className, 'notion-page-icon')}\n        />\n      )\n    } else if (!icon) {\n      if (!hideDefaultIcon) {\n        isImage = true\n        content = (\n          <DefaultPageIcon\n            className={cs(className, 'notion-page-icon')}\n            alt={title ? title : 'page icon'}\n          />\n        )\n      }\n    } else {\n      isImage = false\n      content = (\n        <span\n          className={cs(className, 'notion-page-icon')}\n          role='img'\n          aria-label={icon}\n        >\n          {icon}\n        </span>\n      )\n    }\n  }\n\n  if (!content) {\n    return null\n  }\n\n  return (\n    <div\n      className={cs(\n        inline ? 'notion-page-icon-inline' : 'notion-page-icon-hero',\n        isImage ? 'notion-page-icon-image' : 'notion-page-icon-span'\n      )}\n    >\n      {content}\n    </div>\n  )\n}\n","import React from 'react'\n\nexport const DefaultPageIcon = (props) => {\n  const { className, ...rest } = props\n  return (\n    <svg className={className} {...rest} viewBox='0 0 30 30' width='16'>\n      <path d='M16,1H4v28h22V11L16,1z M16,3.828L23.172,11H16V3.828z M24,27H6V3h8v10h10V27z M8,17h14v-2H8V17z M8,21h14v-2H8V21z M8,25h14v-2H8V25z'></path>\n    </svg>\n  )\n}\n","import React from 'react'\nimport { Img, ImgProps } from 'react-image'\nimport { isBrowser } from '../utils'\n\nexport const GracefulImage = (props: ImgProps) => {\n  if (isBrowser) {\n    return <Img {...props} />\n  } else {\n    // @ts-expect-error (must use the appropriate subset of props for <img> if using SSR)\n    return <img {...props} />\n  }\n}\n","import React, { useEffect, useState } from 'react'\n\nimport { useNotionContext } from '../context'\nimport { cs } from '../utils'\nimport SvgTypeGitHub from '../icons/type-github'\n\ninterface GitHubRepo {\n  name: string\n  owner: {\n    login: string\n    avatar_url: string\n  }\n  updated_at: string\n}\n\nexport const ExternalComponentGithub: React.FC<{\n  original_url: string\n  block?: boolean\n  className?: string\n}> = ({ original_url, block, className }) => {\n  const { components } = useNotionContext()\n  const url = new URL(original_url)\n  const [name, setName] = useState<string>(url.pathname.substring(1))\n  const [githubRepo, setGithubRepo] = useState<GitHubRepo>()\n\n  useEffect(() => {\n    // let's do a call to github api, by extracting repo from url\n    fetch(`https://api.github.com/repos/${name}`)\n      .then((response) => {\n        if (!response.ok) {\n          throw Error(response.statusText)\n        }\n        return response.json()\n      })\n      .then((data) => {\n        setGithubRepo(data)\n        setName(data.name)\n      })\n      .catch((err) => console.error(err))\n  }, [name])\n\n  return (\n    <components.Link\n      target='_blank'\n      rel='noopener noreferrer'\n      href={original_url}\n      className={cs(\n        'notion-external',\n        block ? 'notion-external-block notion-row' : 'notion-external-mention',\n        className\n      )}\n    >\n      <div className='notion-external-image'>\n        <SvgTypeGitHub />\n      </div>\n\n      <div className='notion-external-description'>\n        <div className='notion-external-title'>{name}</div>\n\n        {githubRepo && (\n          <div className='notion-external-subtitle'>\n            {`${\n              githubRepo.owner.login\n            } • Updated on ${githubRepo.updated_at.substring(0, 10)}`}\n          </div>\n        )}\n      </div>\n    </components.Link>\n  )\n}\n","import React from 'react'\n\nfunction SvgTypeGitHub(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 260 260' {...props}>\n      <g>\n        <path\n          d='M128.00106,0 C57.3172926,0 0,57.3066942 0,128.00106 C0,184.555281 36.6761997,232.535542 87.534937,249.460899 C93.9320223,250.645779 96.280588,246.684165 96.280588,243.303333 C96.280588,240.251045 96.1618878,230.167899 96.106777,219.472176 C60.4967585,227.215235 52.9826207,204.369712 52.9826207,204.369712 C47.1599584,189.574598 38.770408,185.640538 38.770408,185.640538 C27.1568785,177.696113 39.6458206,177.859325 39.6458206,177.859325 C52.4993419,178.762293 59.267365,191.04987 59.267365,191.04987 C70.6837675,210.618423 89.2115753,204.961093 96.5158685,201.690482 C97.6647155,193.417512 100.981959,187.77078 104.642583,184.574357 C76.211799,181.33766 46.324819,170.362144 46.324819,121.315702 C46.324819,107.340889 51.3250588,95.9223682 59.5132437,86.9583937 C58.1842268,83.7344152 53.8029229,70.715562 60.7532354,53.0843636 C60.7532354,53.0843636 71.5019501,49.6441813 95.9626412,66.2049595 C106.172967,63.368876 117.123047,61.9465949 128.00106,61.8978432 C138.879073,61.9465949 149.837632,63.368876 160.067033,66.2049595 C184.49805,49.6441813 195.231926,53.0843636 195.231926,53.0843636 C202.199197,70.715562 197.815773,83.7344152 196.486756,86.9583937 C204.694018,95.9223682 209.660343,107.340889 209.660343,121.315702 C209.660343,170.478725 179.716133,181.303747 151.213281,184.472614 C155.80443,188.444828 159.895342,196.234518 159.895342,208.176593 C159.895342,225.303317 159.746968,239.087361 159.746968,243.303333 C159.746968,246.709601 162.05102,250.70089 168.53925,249.443941 C219.370432,232.499507 256,184.536204 256,128.00106 C256,57.3066942 198.691187,0 128.00106,0 Z M47.9405593,182.340212 C47.6586465,182.976105 46.6581745,183.166873 45.7467277,182.730227 C44.8183235,182.312656 44.2968914,181.445722 44.5978808,180.80771 C44.8734344,180.152739 45.876026,179.97045 46.8023103,180.409216 C47.7328342,180.826786 48.2627451,181.702199 47.9405593,182.340212 Z M54.2367892,187.958254 C53.6263318,188.524199 52.4329723,188.261363 51.6232682,187.366874 C50.7860088,186.474504 50.6291553,185.281144 51.2480912,184.70672 C51.8776254,184.140775 53.0349512,184.405731 53.8743302,185.298101 C54.7115892,186.201069 54.8748019,187.38595 54.2367892,187.958254 Z M58.5562413,195.146347 C57.7719732,195.691096 56.4895886,195.180261 55.6968417,194.042013 C54.9125733,192.903764 54.9125733,191.538713 55.713799,190.991845 C56.5086651,190.444977 57.7719732,190.936735 58.5753181,192.066505 C59.3574669,193.22383 59.3574669,194.58888 58.5562413,195.146347 Z M65.8613592,203.471174 C65.1597571,204.244846 63.6654083,204.03712 62.5716717,202.981538 C61.4524999,201.94927 61.1409122,200.484596 61.8446341,199.710926 C62.5547146,198.935137 64.0575422,199.15346 65.1597571,200.200564 C66.2704506,201.230712 66.6095936,202.705984 65.8613592,203.471174 Z M75.3025151,206.281542 C74.9930474,207.284134 73.553809,207.739857 72.1039724,207.313809 C70.6562556,206.875043 69.7087748,205.700761 70.0012857,204.687571 C70.302275,203.678621 71.7478721,203.20382 73.2083069,203.659543 C74.6539041,204.09619 75.6035048,205.261994 75.3025151,206.281542 Z M86.046947,207.473627 C86.0829806,208.529209 84.8535871,209.404622 83.3316829,209.4237 C81.8013,209.457614 80.563428,208.603398 80.5464708,207.564772 C80.5464708,206.498591 81.7483088,205.631657 83.2786917,205.606221 C84.8005962,205.576546 86.046947,206.424403 86.046947,207.473627 Z M96.6021471,207.069023 C96.7844366,208.099171 95.7267341,209.156872 94.215428,209.438785 C92.7295577,209.710099 91.3539086,209.074206 91.1652603,208.052538 C90.9808515,206.996955 92.0576306,205.939253 93.5413813,205.66582 C95.054807,205.402984 96.4092596,206.021919 96.6021471,207.069023 Z'\n          fill='#161614'\n        ></path>\n      </g>\n    </svg>\n  )\n}\n\nexport default SvgTypeGitHub\n","import React from 'react'\n\nimport CheckIcon from '../icons/check'\n\nexport const Checkbox: React.FC<{\n  isChecked: boolean\n  blockId: string | undefined\n}> = ({ isChecked }) => {\n  let content = null\n\n  if (isChecked) {\n    content = (\n      <div className='notion-property-checkbox-checked'>\n        <CheckIcon />\n      </div>\n    )\n  } else {\n    content = <div className='notion-property-checkbox-unchecked' />\n  }\n\n  return (\n    <span className='notion-property notion-property-checkbox'>{content}</span>\n  )\n}\n","import React from 'react'\n\nfunction SvgCheck(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M5.5 12L14 3.5 12.5 2l-7 7-4-4.003L0 6.499z' />\n    </svg>\n  )\n}\n\nexport default SvgCheck\n","import * as types from 'notion-types'\nimport { getTextContent, getDateValue } from 'notion-utils'\n\nimport format from 'date-fns/format'\nimport getDate from 'date-fns/getDate'\nimport getDay from 'date-fns/getDay'\nimport getHours from 'date-fns/getHours'\nimport getMinutes from 'date-fns/getMinutes'\nimport getMonth from 'date-fns/getMonth'\nimport getYear from 'date-fns/getYear'\nimport add from 'date-fns/add'\nimport sub from 'date-fns/sub'\nimport intervalToDuration from 'date-fns/intervalToDuration'\n\nexport interface EvalFormulaContext {\n  properties: types.PropertyMap\n  schema: types.CollectionPropertySchemaMap\n\n  endDate?: boolean\n}\n\n/**\n * Evaluates a Notion formula expression to a result value.\n *\n * All built-in functions and operators are supported.\n *\n * NOTE: this needs a lot more testing, especially around covering all the different\n * function types and coercing different property values correctly.\n *\n * It does work for many of our test cases, however.\n *\n * @param formula - Formula to evaluate.\n * @param context - Collection context containing property schema and values.\n */\nexport function evalFormula(\n  formula: types.Formula,\n  context: EvalFormulaContext\n): types.FormulaResult {\n  const { endDate, ...ctx } = context\n\n  // TODO: coerce return type using `formula.return_type`\n  switch (formula?.type) {\n    case 'symbol':\n      // TODO: this isn't documented anywhere but seen in the wild\n      return formula.name === 'true'\n\n    case 'constant': {\n      const value = formula.value\n      switch (formula.result_type) {\n        case 'text':\n          return value\n        case 'number':\n          return parseFloat(value)\n        default:\n          return value\n      }\n    }\n\n    case 'property': {\n      const value = ctx.properties[formula.id]\n      const text = getTextContent(value)\n\n      switch (formula.result_type) {\n        case 'text':\n          return text\n\n        case 'number':\n          return parseFloat(text)\n\n        case 'boolean':\n          // TODO: handle chceckbox properties\n          if (typeof text === 'string') {\n            return text === 'true'\n          } else {\n            return !!text\n          }\n\n        case 'date': {\n          // console.log('date', text, value)\n\n          const v = getDateValue(value)\n          if (v) {\n            if (endDate && v.end_date) {\n              const date = new Date(v.end_date)\n              return new Date(\n                date.getUTCFullYear(),\n                date.getUTCMonth(),\n                date.getUTCDate()\n              )\n            } else {\n              const date = new Date(v.start_date)\n              return new Date(\n                date.getUTCFullYear(),\n                date.getUTCMonth(),\n                date.getUTCDate()\n              )\n            }\n          } else {\n            return new Date(text)\n          }\n        }\n\n        default:\n          return text\n      }\n    }\n\n    case 'operator':\n    // All operators are exposed as functions, so we handle them the same\n\n    // eslint-disable-next-line no-fallthrough\n    case 'function':\n      return evalFunctionFormula(formula, ctx)\n\n    default:\n      // console.log(formula)\n      throw new Error(\n        `invalid or unsupported formula \"${(formula as any)?.type}`\n      )\n  }\n}\n\n/**\n * Evaluates a Notion formula function or operator expression.\n *\n * Note that all operators are also exposed as functions, so we handle them the same.\n *\n * @private\n */\nfunction evalFunctionFormula(\n  formula: types.FunctionFormula | types.OperatorFormula,\n  ctx: EvalFormulaContext\n): types.FormulaResult {\n  const args = formula?.args\n\n  switch (formula.name) {\n    // logic\n    // ------------------------------------------------------------------------\n\n    case 'and':\n      return evalFormula(args[0], ctx) && evalFormula(args[1], ctx)\n\n    case 'empty':\n      return !evalFormula(args[0], ctx)\n\n    case 'equal':\n      // eslint-disable-next-line eqeqeq\n      return evalFormula(args[0], ctx) == evalFormula(args[1], ctx)\n\n    case 'if':\n      return evalFormula(args[0], ctx)\n        ? evalFormula(args[1], ctx)\n        : evalFormula(args[2], ctx)\n\n    case 'larger':\n      return evalFormula(args[0], ctx) > evalFormula(args[1], ctx)\n\n    case 'largerEq':\n      return evalFormula(args[0], ctx) >= evalFormula(args[1], ctx)\n\n    case 'not':\n      return !evalFormula(args[0], ctx)\n\n    case 'or':\n      return evalFormula(args[0], ctx) || evalFormula(args[1], ctx)\n\n    case 'smaller':\n      return evalFormula(args[0], ctx) < evalFormula(args[1], ctx)\n\n    case 'smallerEq':\n      return evalFormula(args[0], ctx) <= evalFormula(args[1], ctx)\n\n    case 'unequal':\n      // eslint-disable-next-line eqeqeq\n      return evalFormula(args[0], ctx) != evalFormula(args[1], ctx)\n\n    // numeric\n    // ------------------------------------------------------------------------\n\n    case 'abs':\n      return Math.abs(evalFormula(args[0], ctx) as number)\n\n    case 'add': {\n      const v0 = evalFormula(args[0], ctx)\n      const v1 = evalFormula(args[1], ctx)\n\n      if (typeof v0 === 'number') {\n        return v0 + +v1\n      } else if (typeof v0 === 'string') {\n        return v0 + `${v1}`\n      } else {\n        // TODO\n        return v0\n      }\n    }\n\n    case 'cbrt':\n      return Math.cbrt(evalFormula(args[0], ctx) as number)\n\n    case 'ceil':\n      return Math.ceil(evalFormula(args[0], ctx) as number)\n\n    case 'divide':\n      return (\n        (evalFormula(args[0], ctx) as number) /\n        (evalFormula(args[1], ctx) as number)\n      )\n\n    case 'exp':\n      return Math.exp(evalFormula(args[0], ctx) as number)\n\n    case 'floor':\n      return Math.floor(evalFormula(args[0], ctx) as number)\n\n    case 'ln':\n      return Math.log(evalFormula(args[0], ctx) as number)\n\n    case 'log10':\n      return Math.log10(evalFormula(args[0], ctx) as number)\n\n    case 'log2':\n      return Math.log2(evalFormula(args[0], ctx) as number)\n\n    case 'max': {\n      const values = args.map((arg) => evalFormula(arg, ctx) as number)\n      return values.reduce(\n        (acc, value) => Math.max(acc, value),\n        Number.NEGATIVE_INFINITY\n      )\n    }\n\n    case 'min': {\n      const values = args.map((arg) => evalFormula(arg, ctx) as number)\n      return values.reduce(\n        (acc, value) => Math.min(acc, value),\n        Number.POSITIVE_INFINITY\n      )\n    }\n\n    case 'mod':\n      return (\n        (evalFormula(args[0], ctx) as number) %\n        (evalFormula(args[1], ctx) as number)\n      )\n\n    case 'multiply':\n      return (\n        (evalFormula(args[0], ctx) as number) *\n        (evalFormula(args[1], ctx) as number)\n      )\n\n    case 'pow':\n      return Math.pow(\n        evalFormula(args[0], ctx) as number,\n        evalFormula(args[1], ctx) as number\n      )\n\n    case 'round':\n      return Math.round(evalFormula(args[0], ctx) as number)\n\n    case 'sign':\n      return Math.sign(evalFormula(args[0], ctx) as number)\n\n    case 'sqrt':\n      return Math.sqrt(evalFormula(args[0], ctx) as number)\n\n    case 'subtract':\n      return (\n        (evalFormula(args[0], ctx) as number) -\n        (evalFormula(args[1], ctx) as number)\n      )\n\n    case 'toNumber':\n      return parseFloat(evalFormula(args[0], ctx) as string)\n\n    case 'unaryMinus':\n      return (evalFormula(args[0], ctx) as number) * -1\n\n    case 'unaryPlus':\n      return parseFloat(evalFormula(args[0], ctx) as string)\n\n    // text\n    // ------------------------------------------------------------------------\n\n    case 'concat': {\n      const values = args.map((arg) => evalFormula(arg, ctx) as number)\n      return values.join('')\n    }\n\n    case 'contains':\n      return (evalFormula(args[0], ctx) as string).includes(\n        evalFormula(args[1], ctx) as string\n      )\n\n    case 'format': {\n      const value = evalFormula(args[0], ctx)\n\n      switch (typeof value) {\n        case 'string':\n          return value\n\n        case 'object':\n          if (value instanceof Date) {\n            return format(value as Date, 'MMM d, YYY')\n          } else {\n            // shouldn't ever get here\n            return `${value}`\n          }\n\n        case 'number':\n        default:\n          return `${value}`\n      }\n    }\n\n    case 'join': {\n      const [delimiterArg, ...restArgs] = args\n      const delimiter = evalFormula(delimiterArg, ctx) as string\n      const values = restArgs.map((arg) => evalFormula(arg, ctx) as number)\n      return values.join(delimiter)\n    }\n\n    case 'length':\n      return (evalFormula(args[0], ctx) as string).length\n\n    case 'replace': {\n      const value = evalFormula(args[0], ctx) as string\n      const regex = evalFormula(args[1], ctx) as string\n      const replacement = evalFormula(args[2], ctx) as string\n      return value.replace(new RegExp(regex), replacement)\n    }\n\n    case 'replaceAll': {\n      const value = evalFormula(args[0], ctx) as string\n      const regex = evalFormula(args[1], ctx) as string\n      const replacement = evalFormula(args[2], ctx) as string\n      return value.replace(new RegExp(regex, 'g'), replacement)\n    }\n\n    case 'slice': {\n      const value = evalFormula(args[0], ctx) as string\n      const beginIndex = evalFormula(args[1], ctx) as number\n      const endIndex = args[2]\n        ? (evalFormula(args[2], ctx) as number)\n        : value.length\n      return value.slice(beginIndex, endIndex)\n    }\n\n    case 'test': {\n      const value = evalFormula(args[0], ctx) as string\n      const regex = evalFormula(args[1], ctx) as string\n      return new RegExp(regex).test(value)\n    }\n\n    // date & time\n    // ------------------------------------------------------------------------\n\n    case 'date':\n      return getDate(evalFormula(args[0], ctx) as Date)\n\n    case 'dateAdd': {\n      const date = evalFormula(args[0], ctx) as Date\n      const number = evalFormula(args[1], ctx) as number\n      const unit = evalFormula(args[1], ctx) as string\n      return add(date, { [unit]: number })\n    }\n\n    case 'dateBetween': {\n      const date1 = evalFormula(args[0], ctx) as Date\n      const date2 = evalFormula(args[1], ctx) as Date\n      const unit = evalFormula(args[1], ctx) as string\n      return (\n        intervalToDuration({\n          start: date2,\n          end: date1\n        }) as any\n      )[unit] as number\n    }\n\n    case 'dateSubtract': {\n      const date = evalFormula(args[0], ctx) as Date\n      const number = evalFormula(args[1], ctx) as number\n      const unit = evalFormula(args[1], ctx) as string\n      return sub(date, { [unit]: number })\n    }\n\n    case 'day':\n      return getDay(evalFormula(args[0], ctx) as Date)\n\n    case 'end':\n      return evalFormula(args[0], { ...ctx, endDate: true }) as Date\n\n    case 'formatDate': {\n      const date = evalFormula(args[0], ctx) as Date\n      const formatValue = (evalFormula(args[1], ctx) as string).replace(\n        'dddd',\n        'eeee'\n      )\n      return format(date, formatValue)\n    }\n\n    case 'fromTimestamp':\n      return new Date(evalFormula(args[0], ctx) as number)\n\n    case 'hour':\n      return getHours(evalFormula(args[0], ctx) as Date)\n\n    case 'minute':\n      return getMinutes(evalFormula(args[0], ctx) as Date)\n\n    case 'month':\n      return getMonth(evalFormula(args[0], ctx) as Date)\n\n    case 'now':\n      return new Date()\n\n    case 'start':\n      return evalFormula(args[0], { ...ctx, endDate: false }) as Date\n\n    case 'timestamp':\n      return (evalFormula(args[0], ctx) as Date).getTime()\n\n    case 'year':\n      return getYear(evalFormula(args[0], ctx) as Date)\n\n    default:\n      // console.log(formula)\n      throw new Error(\n        `invalid or unsupported function formula \"${(formula as any)?.type}`\n      )\n  }\n}\n","import React from 'react'\n\nfunction SvgCollectionViewTable(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm3.75 5.67v2.66h6.75V5.67H5.75zm0 4.17v2.66h5.75a1 1 0 001-1V9.84H5.75zM1.5 5.67v2.66h2.75V5.67H1.5zm0 4.17v1.66a1 1 0 001 1h1.75V9.84H1.5zm1-8.34a1 1 0 00-1 1v1.66h2.75V1.5H2.5zm3.25 0v2.66h6.75V2.5a1 1 0 00-1-1H5.75z' />\n    </svg>\n  )\n}\n\nexport default SvgCollectionViewTable\n","import React from 'react'\n\nfunction SvgCollectionViewBoard(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M12 1.5H2a.5.5 0 00-.5.5v10a.5.5 0 00.5.5h10a.5.5 0 00.5-.5V2a.5.5 0 00-.5-.5zM2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm1 3h2v6H3V3zm3 0h2v8H6V3zm3 0h2v4H9V3z' />\n    </svg>\n  )\n}\n\nexport default SvgCollectionViewBoard\n","import React from 'react'\n\nfunction SvgCollectionViewGallery(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M12 1.5H2a.5.5 0 00-.5.5v10a.5.5 0 00.5.5h10a.5.5 0 00.5-.5V2a.5.5 0 00-.5-.5zM2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm1 3h3.5v3.5H3V3zm4.5 0H11v3.5H7.5V3zM3 7.5h3.5V11H3V7.5zm4.5 0H11V11H7.5V7.5z' />\n    </svg>\n  )\n}\n\nexport default SvgCollectionViewGallery\n","import React from 'react'\n\nfunction SvgCollectionViewList(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M12 1.5H2a.5.5 0 00-.5.5v10a.5.5 0 00.5.5h10a.5.5 0 00.5-.5V2a.5.5 0 00-.5-.5zM2 0h10a2 2 0 012 2v10a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm1 3h6v1.5H3V3zm0 2.5h8V7H3V5.5zM3 8h4v1.5H3V8z' />\n    </svg>\n  )\n}\n\nexport default SvgCollectionViewList\n","import React from 'react'\n\nfunction SvgCollectionViewCalendar(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M2.564 4.004c-.586 0-.71.024-.833.09a.319.319 0 00-.141.14c-.066.124-.09.247-.09.834v6.368c0 .586.024.71.09.833a.319.319 0 00.14.141c.124.066.248.09.834.09h8.872c.586 0 .71-.024.833-.09a.319.319 0 00.141-.14c.066-.124.09-.248.09-.834V5.068c0-.587-.024-.71-.09-.834a.319.319 0 00-.14-.14c-.124-.066-.248-.09-.834-.09H2.564zm0-4.004h8.872c.892 0 1.215.093 1.54.267.327.174.583.43.757.756.174.326.267.65.267 1.54v8.873c0 .892-.093 1.215-.267 1.54-.174.327-.43.583-.756.757-.326.174-.65.267-1.54.267H2.563c-.892 0-1.215-.093-1.54-.267a1.817 1.817 0 01-.757-.756C.093 12.65 0 12.327 0 11.437V2.563c0-.892.093-1.215.267-1.54.174-.327.43-.583.756-.757C1.35.093 1.673 0 2.563 0zm4.044 7.88c.179.11.318.256.418.436.1.18.148.394.148.64 0 .304-.08.597-.238.876-.16.28-.392.498-.692.65-.299.15-.685.224-1.16.224-.46 0-.827-.055-1.1-.166a1.687 1.687 0 01-.68-.492 2.227 2.227 0 01-.404-.802l.083-.127 1.37-.182.112.08c.05.258.126.431.221.52a.507.507 0 00.364.133.495.495 0 00.386-.169c.105-.115.158-.27.158-.472 0-.205-.051-.358-.15-.463a.527.527 0 00-.407-.157 1.65 1.65 0 00-.417.077l-.127-.104.07-.98.115-.091c.072.01.127.015.164.015.154 0 .28-.047.38-.144.1-.096.15-.205.15-.335a.388.388 0 00-.106-.29c-.07-.07-.168-.105-.3-.105a.444.444 0 00-.324.118c-.083.08-.143.232-.176.457l-.117.084-1.297-.233-.079-.123c.114-.435.334-.772.66-1.006.326-.234.78-.349 1.36-.349.666 0 1.153.126 1.462.384.31.259.467.589.467.982 0 .233-.064.446-.192.636a1.43 1.43 0 01-.37.365c.1.034.182.072.248.113zm1.747-.145a5.186 5.186 0 01-.806.31l-.129-.097V6.824l.07-.096c.455-.147.807-.322 1.055-.524.246-.202.439-.45.579-.747l.09-.057h1.135l.1.1v5.021l-.1.1H8.961l-.1-.1V7.428a4.053 4.053 0 01-.506.307z' />\n    </svg>\n  )\n}\n\nexport default SvgCollectionViewCalendar\n","import React from 'react'\nimport { CollectionViewType } from 'notion-types'\n\nimport CollectionViewTableIcon from './collection-view-table'\nimport CollectionViewBoardIcon from './collection-view-board'\nimport CollectionViewGalleryIcon from './collection-view-gallery'\nimport CollectionViewListIcon from './collection-view-list'\nimport CollectionViewCalendarIcon from './collection-view-calendar'\n\ninterface CollectionViewIconProps {\n  className?: string\n  type: CollectionViewType\n}\n\nconst iconMap = {\n  table: CollectionViewTableIcon,\n  board: CollectionViewBoardIcon,\n  gallery: CollectionViewGalleryIcon,\n  list: CollectionViewListIcon,\n  calendar: CollectionViewCalendarIcon\n}\n\nexport const CollectionViewIcon: React.FC<CollectionViewIconProps> = ({\n  type,\n  ...rest\n}) => {\n  const icon = iconMap[type] as any\n  if (!icon) {\n    return null\n  }\n\n  return icon(rest)\n}\n","import React from 'react'\n\nexport const ChevronDownIcon = (props) => {\n  const { className, ...rest } = props\n  return (\n    <svg className={className} {...rest} viewBox='0 0 30 30' width='10'>\n      <polygon points='15,17.4 4.8,7 2,9.8 15,23 28,9.8 25.2,7 '></polygon>\n    </svg>\n  )\n}\n","import React from 'react'\n\nimport { CollectionViewProps } from '../types'\nimport { CollectionViewTable } from './collection-view-table'\nimport { CollectionViewGallery } from './collection-view-gallery'\nimport { CollectionViewList } from './collection-view-list'\nimport { CollectionViewBoard } from './collection-view-board'\n\nexport const CollectionView: React.FC<CollectionViewProps> = (props) => {\n  const { collectionView } = props\n\n  switch (collectionView.type) {\n    case 'table':\n      return <CollectionViewTable {...props} />\n\n    case 'gallery':\n      return <CollectionViewGallery {...props} />\n\n    case 'list':\n      return <CollectionViewList {...props} />\n\n    case 'board':\n      return <CollectionViewBoard {...props} />\n\n    default:\n      console.warn('unsupported collection view', collectionView)\n      return null\n  }\n}\n","import React from 'react'\n\nimport { CollectionColumnTitle } from './collection-column-title'\nimport { CollectionGroup } from './collection-group'\nimport { CollectionViewProps } from '../types'\nimport { cs } from '../utils'\nimport { getCollectionGroups } from './collection-utils'\nimport { Property } from './property'\nimport { useNotionContext } from '../context'\n\nexport const CollectionViewTable: React.FC<CollectionViewProps> = ({\n  collection,\n  collectionView,\n  collectionData,\n  padding,\n  width\n}) => {\n  const isGroupedCollection = collectionView?.format?.collection_group_by\n\n  if (isGroupedCollection) {\n    const collectionGroups = getCollectionGroups(\n      collection,\n      collectionView,\n      collectionData,\n      padding,\n      width\n    )\n\n    return collectionGroups.map((group, index) => (\n      <CollectionGroup\n        key={index}\n        {...group}\n        collectionViewComponent={(props) => (\n          <Table {...props} padding={padding} width={width} />\n        )}\n        summaryProps={{\n          style: {\n            paddingLeft: padding,\n            paddingRight: padding\n          }\n        }}\n      />\n    ))\n  }\n\n  const blockIds =\n    collectionData['collection_group_results']?.blockIds ??\n    collectionData.blockIds\n\n  return (\n    <Table\n      blockIds={blockIds}\n      collection={collection}\n      collectionView={collectionView}\n      padding={padding}\n      width={width}\n    />\n  )\n}\n\nfunction Table({ blockIds, collection, collectionView, width, padding }) {\n  const { recordMap } = useNotionContext()\n\n  let properties = []\n\n  if (collectionView.format?.table_properties) {\n    properties = collectionView.format?.table_properties.filter(\n      (p) => p.visible && collection.schema[p.property]\n    )\n  } else {\n    properties = [{ property: 'title' }].concat(\n      Object.keys(collection.schema)\n        .filter((p) => p !== 'title')\n        .map((property) => ({ property }))\n    )\n  }\n\n  return (\n    <div\n      className='notion-table'\n      style={{\n        width,\n        maxWidth: width\n      }}\n    >\n      <div\n        className='notion-table-view'\n        style={{\n          paddingLeft: padding,\n          paddingRight: padding\n        }}\n      >\n        {!!properties.length && (\n          <>\n            <div className='notion-table-header'>\n              <div className='notion-table-header-inner'>\n                {properties.map((p) => {\n                  const schema = collection.schema?.[p.property]\n                  const isTitle = p.property === 'title'\n                  const style: React.CSSProperties = {}\n\n                  if (p.width) {\n                    style.width = p.width\n                  } else if (isTitle) {\n                    style.width = 280\n                  } else {\n                    style.width = 200\n                    // style.width = `${100.0 / properties.length}%`\n                  }\n\n                  return (\n                    <div className='notion-table-th' key={p.property}>\n                      <div\n                        className='notion-table-view-header-cell'\n                        style={style}\n                      >\n                        <div className='notion-table-view-header-cell-inner'>\n                          <CollectionColumnTitle schema={schema} />\n                        </div>\n                      </div>\n                    </div>\n                  )\n                })}\n              </div>\n            </div>\n\n            <div className='notion-table-header-placeholder'></div>\n\n            <div className='notion-table-body'>\n              {blockIds.map((blockId) => (\n                <div className='notion-table-row' key={blockId}>\n                  {properties.map((p) => {\n                    const schema = collection.schema?.[p.property]\n                    const block = recordMap.block[blockId]?.value\n                    const data = block?.properties?.[p.property]\n                    const isTitle = p.property === 'title'\n                    const style: React.CSSProperties = {}\n\n                    if (p.width) {\n                      style.width = p.width\n                    } else if (isTitle) {\n                      style.width = 280\n                    } else {\n                      style.width = 200\n                      // style.width = `${100.0 / properties.length}%`\n                    }\n\n                    return (\n                      <div\n                        key={p.property}\n                        className={cs(\n                          'notion-table-cell',\n                          `notion-table-cell-${schema.type}`\n                        )}\n                        style={style}\n                      >\n                        <Property\n                          schema={schema}\n                          data={data}\n                          block={block}\n                          collection={collection}\n                        />\n                      </div>\n                    )\n                  })}\n                </div>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { CollectionGroupProps } from '../types'\nimport { Property } from './property'\n\nexport const CollectionGroup: React.FC<CollectionGroupProps> = ({\n  collectionViewComponent: CollectionViewComponent,\n  collection,\n  collectionGroup,\n  schema,\n  value,\n  hidden,\n  summaryProps,\n  detailsProps,\n  ...rest\n}) => {\n  if (hidden) return null\n\n  return (\n    <details open className='notion-collection-group' {...detailsProps}>\n      <summary className='notion-collection-group-title' {...summaryProps}>\n        <div>\n          <Property schema={schema} data={[[value]]} collection={collection} />\n          <span className='notion-board-th-count'>\n            {collectionGroup?.total}\n          </span>\n        </div>\n      </summary>\n\n      <CollectionViewComponent\n        collection={collection}\n        collectionGroup={collectionGroup}\n        {...rest}\n      />\n    </details>\n  )\n}\n","import format from 'date-fns/format'\n\nexport function getCollectionGroups(\n  collection: any,\n  collectionView: any,\n  collectionData: any,\n  ...rest\n) {\n  const elems = collectionView?.format?.collection_groups || []\n  return elems?.map(({ property, hidden, value: { value, type } }) => {\n    const isUncategorizedValue = typeof value === 'undefined'\n    const isDateValue = value?.range\n    // TODO: review dates reducers\n    const queryLabel = isUncategorizedValue\n      ? 'uncategorized'\n      : isDateValue\n      ? value.range?.start_date || value.range?.end_date\n      : value?.value || value\n\n    const collectionGroup = collectionData[`results:${type}:${queryLabel}`]\n    let queryValue =\n      !isUncategorizedValue && (isDateValue || value?.value || value)\n    let schema = collection.schema[property]\n\n    // Checkbox boolen value must be Yes||No\n    if (type === 'checkbox' && value) {\n      queryValue = 'Yes'\n    }\n\n    if (isDateValue) {\n      schema = {\n        type: 'text',\n        name: 'text'\n      }\n\n      // TODO: review dates format based on value.type ('week'|'month'|'year')\n      queryValue = format(new Date(queryLabel), 'MMM d, YYY hh:mm aa')\n    }\n\n    return {\n      collectionGroup,\n      schema,\n      value: queryValue || 'No description',\n      hidden,\n      collection,\n      collectionView,\n      collectionData,\n      blockIds: collectionGroup?.blockIds,\n      ...rest\n    }\n  })\n}\n","import React from 'react'\nimport { PageBlock } from 'notion-types'\n\nimport { CollectionViewProps } from '../types'\nimport { cs } from '../utils'\nimport { getCollectionGroups } from './collection-utils'\nimport { useNotionContext } from '../context'\nimport { CollectionCard } from './collection-card'\nimport { CollectionGroup } from './collection-group'\n\nexport const CollectionViewGallery: React.FC<CollectionViewProps> = ({\n  collection,\n  collectionView,\n  collectionData\n}) => {\n  const isGroupedCollection = collectionView?.format?.collection_group_by\n\n  if (isGroupedCollection) {\n    const collectionGroups = getCollectionGroups(\n      collection,\n      collectionView,\n      collectionData\n    )\n\n    return collectionGroups.map((group, index) => (\n      <CollectionGroup\n        key={index}\n        {...group}\n        collectionViewComponent={Gallery}\n      />\n    ))\n  }\n\n  const blockIds =\n    collectionData['collection_group_results']?.blockIds ??\n    collectionData.blockIds\n\n  return (\n    <Gallery\n      collectionView={collectionView}\n      collection={collection}\n      blockIds={blockIds}\n    />\n  )\n}\n\nfunction Gallery({ blockIds, collectionView, collection }) {\n  const { recordMap } = useNotionContext()\n  const {\n    gallery_cover = { type: 'none' },\n    gallery_cover_size = 'medium',\n    gallery_cover_aspect = 'cover'\n  } = collectionView.format || {}\n\n  return (\n    <div className='notion-gallery'>\n      <div className='notion-gallery-view'>\n        <div\n          className={cs(\n            'notion-gallery-grid',\n            `notion-gallery-grid-size-${gallery_cover_size}`\n          )}\n        >\n          {blockIds.map((blockId) => {\n            const block = recordMap.block[blockId]?.value as PageBlock\n            if (!block) return null\n\n            return (\n              <CollectionCard\n                collection={collection}\n                block={block}\n                cover={gallery_cover}\n                coverSize={gallery_cover_size}\n                coverAspect={gallery_cover_aspect}\n                properties={collectionView.format?.gallery_properties}\n                key={blockId}\n              />\n            )\n          })}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { ImageBlock } from 'notion-types'\nimport { getTextContent } from 'notion-utils'\n\nimport { CollectionCardProps } from '../types'\nimport { Property } from './property'\nimport { cs } from '../utils'\nimport { useNotionContext, dummyLink, NotionContextProvider } from '../context'\nimport { LazyImage } from '../components/lazy-image'\n\nexport const CollectionCard: React.FC<CollectionCardProps> = ({\n  collection,\n  block,\n  cover,\n  coverSize,\n  coverAspect,\n  properties,\n  className,\n  ...rest\n}) => {\n  const ctx = useNotionContext()\n  const { components, recordMap, mapPageUrl, mapImageUrl } = ctx\n  let coverContent = null\n\n  const { page_cover_position = 0.5 } = block.format || {}\n  const coverPosition = (1 - page_cover_position) * 100\n\n  if (cover?.type === 'page_content') {\n    const contentBlockId = block.content?.find((blockId) => {\n      const block = recordMap.block[blockId]?.value\n\n      if (block?.type === 'image') {\n        return true\n      }\n    })\n\n    if (contentBlockId) {\n      const contentBlock = recordMap.block[contentBlockId]?.value as ImageBlock\n\n      const source =\n        contentBlock.properties?.source?.[0]?.[0] ??\n        contentBlock.format?.display_source\n\n      if (source) {\n        const src = mapImageUrl(source, contentBlock)\n        const caption = contentBlock.properties?.caption?.[0]?.[0]\n\n        coverContent = (\n          <LazyImage\n            src={src}\n            alt={caption || 'notion image'}\n            style={{\n              objectFit: coverAspect\n            }}\n          />\n        )\n      }\n    }\n\n    if (!coverContent) {\n      coverContent = <div className='notion-collection-card-cover-empty' />\n    }\n  } else if (cover?.type === 'page_cover') {\n    const { page_cover } = block.format || {}\n\n    if (page_cover) {\n      const coverPosition = (1 - page_cover_position) * 100\n\n      coverContent = (\n        <LazyImage\n          src={mapImageUrl(page_cover, block)}\n          alt={getTextContent(block.properties?.title)}\n          style={{\n            objectFit: coverAspect,\n            objectPosition: `center ${coverPosition}%`\n          }}\n        />\n      )\n    }\n  } else if (cover?.type === 'property') {\n    const { property } = cover\n    const schema = collection.schema[property]\n    const data = block.properties?.[property]\n\n    if (schema && data) {\n      if (schema.type === 'file') {\n        const files = data\n          .filter((v) => v.length === 2)\n          .map((f) => f.flat().flat())\n        const file = files[0]\n\n        if (file) {\n          coverContent = (\n            <span className={`notion-property-${schema.type}`}>\n              <LazyImage\n                alt={file[0] as string}\n                src={mapImageUrl(file[2] as string, block)}\n                style={{\n                  objectFit: coverAspect,\n                  objectPosition: `center ${coverPosition}%`\n                }}\n              />\n            </span>\n          )\n        }\n      } else {\n        coverContent = <Property schema={schema} data={data} />\n      }\n    }\n  }\n\n  return (\n    <NotionContextProvider\n      {...ctx}\n      components={{\n        ...ctx.components,\n        // Disable <a> tabs in all child components so we don't create invalid DOM\n        // trees with stacked <a> tags.\n        Link: dummyLink,\n        PageLink: dummyLink\n      }}\n    >\n      <components.PageLink\n        className={cs(\n          'notion-collection-card',\n          `notion-collection-card-size-${coverSize}`,\n          className\n        )}\n        href={mapPageUrl(block.id)}\n        {...rest}\n      >\n        {(coverContent || cover?.type !== 'none') && (\n          <div className='notion-collection-card-cover'>{coverContent}</div>\n        )}\n\n        <div className='notion-collection-card-body'>\n          <div className='notion-collection-card-property'>\n            <Property\n              schema={collection.schema.title}\n              data={block?.properties?.title}\n              block={block}\n              collection={collection}\n            />\n          </div>\n\n          {properties\n            ?.filter(\n              (p) =>\n                p.visible &&\n                p.property !== 'title' &&\n                collection.schema[p.property]\n            )\n            .map((p) => {\n              if (!block.properties) return null\n              const schema = collection.schema[p.property]\n              const data = block.properties[p.property]\n\n              return (\n                <div\n                  className='notion-collection-card-property'\n                  key={p.property}\n                >\n                  <Property\n                    schema={schema}\n                    data={data}\n                    block={block}\n                    collection={collection}\n                    inline\n                  />\n                </div>\n              )\n            })}\n        </div>\n      </components.PageLink>\n    </NotionContextProvider>\n  )\n}\n","import React from 'react'\nimport { PageBlock } from 'notion-types'\n\nimport { CollectionViewProps } from '../types'\nimport { Property } from './property'\nimport { useNotionContext } from '../context'\nimport { CollectionGroup } from './collection-group'\nimport { getCollectionGroups } from './collection-utils'\n\nexport const CollectionViewList: React.FC<CollectionViewProps> = ({\n  collection,\n  collectionView,\n  collectionData\n}) => {\n  const isGroupedCollection = collectionView?.format?.collection_group_by\n\n  if (isGroupedCollection) {\n    const collectionGroups = getCollectionGroups(\n      collection,\n      collectionView,\n      collectionData\n    )\n\n    return collectionGroups.map((group, key) => (\n      <CollectionGroup key={key} {...group} collectionViewComponent={List} />\n    ))\n  }\n\n  const blockIds =\n    collectionData['collection_group_results']?.blockIds ??\n    collectionData.blockIds\n\n  return (\n    <List\n      blockIds={blockIds}\n      collection={collection}\n      collectionView={collectionView}\n    />\n  )\n}\n\nfunction List({ blockIds, collection, collectionView }) {\n  const { components, recordMap, mapPageUrl } = useNotionContext()\n\n  return (\n    <div className='notion-list-collection'>\n      <div className='notion-list-view'>\n        <div className='notion-list-body'>\n          {blockIds.map((blockId) => {\n            const block = recordMap.block[blockId]?.value as PageBlock\n            if (!block) return null\n\n            const titleSchema = collection.schema.title\n            const titleData = block?.properties?.title\n\n            return (\n              <components.PageLink\n                className='notion-list-item notion-page-link'\n                href={mapPageUrl(block.id)}\n                key={blockId}\n              >\n                <div className='notion-list-item-title'>\n                  <Property\n                    schema={titleSchema}\n                    data={titleData}\n                    block={block}\n                    collection={collection}\n                  />\n                </div>\n\n                <div className='notion-list-item-body'>\n                  {collectionView.format?.list_properties\n                    ?.filter((p) => p.visible)\n                    .map((p) => {\n                      const schema = collection.schema[p.property]\n                      const data = block && block.properties?.[p.property]\n\n                      if (!schema) {\n                        return null\n                      }\n\n                      return (\n                        <div\n                          className='notion-list-item-property'\n                          key={p.property}\n                        >\n                          <Property\n                            schema={schema}\n                            data={data}\n                            block={block}\n                            collection={collection}\n                          />\n                        </div>\n                      )\n                    })}\n                </div>\n              </components.PageLink>\n            )\n          })}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { PageBlock } from 'notion-types'\n\nimport { CollectionCard } from './collection-card'\nimport { CollectionGroup } from './collection-group'\nimport { CollectionViewProps } from '../types'\nimport { cs } from '../utils'\nimport { EmptyIcon } from '../icons/empty-icon'\nimport { getCollectionGroups } from './collection-utils'\nimport { Property } from './property'\nimport { useNotionContext } from '../context'\n\nexport const CollectionViewBoard: React.FC<CollectionViewProps> = ({\n  collection,\n  collectionView,\n  collectionData,\n  padding\n}) => {\n  const isGroupedCollection = collectionView?.format?.collection_group_by\n\n  if (isGroupedCollection) {\n    const collectionGroups = getCollectionGroups(\n      collection,\n      collectionView,\n      collectionData,\n      padding\n    )\n\n    return collectionGroups.map((group, index) => (\n      <CollectionGroup\n        key={index}\n        {...group}\n        summaryProps={{\n          style: {\n            paddingLeft: padding\n          }\n        }}\n        collectionViewComponent={(props) => (\n          <Board padding={padding} {...props} />\n        )}\n      />\n    ))\n  }\n\n  return (\n    <Board\n      padding={padding}\n      collectionView={collectionView}\n      collection={collection}\n      collectionData={collectionData}\n    />\n  )\n}\n\nfunction Board({ collectionView, collectionData, collection, padding }) {\n  const { recordMap } = useNotionContext()\n  const {\n    board_cover = { type: 'none' },\n    board_cover_size = 'medium',\n    board_cover_aspect = 'cover'\n  } = collectionView?.format || {}\n  const boardGroups =\n    collectionView?.format?.board_columns ||\n    collectionView?.format?.board_groups2 ||\n    []\n  return (\n    <div className='notion-board'>\n      <div\n        className={cs(\n          'notion-board-view',\n          `notion-board-view-size-${board_cover_size}`\n        )}\n        style={{\n          paddingLeft: padding\n        }}\n      >\n        <div className='notion-board-header'>\n          <div className='notion-board-header-inner'>\n            {boardGroups.map((p, index) => {\n              if (!(collectionData as any).board_columns?.results) {\n                //no groupResults in the data when collection is in a toggle\n                return null\n              }\n              const group = (collectionData as any).board_columns.results![\n                index\n              ]\n              const schema = collection.schema[p.property]\n\n              if (!group || !schema || p.hidden) {\n                return null\n              }\n\n              return (\n                <div className='notion-board-th' key={index}>\n                  <div className='notion-board-th-body'>\n                    {group.value?.value ? (\n                      <Property\n                        schema={schema}\n                        data={[[group.value?.value]]}\n                        collection={collection}\n                      />\n                    ) : (\n                      <span>\n                        <EmptyIcon className='notion-board-th-empty' /> No\n                        Select\n                      </span>\n                    )}\n\n                    <span className='notion-board-th-count'>{group.total}</span>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n\n        <div className='notion-board-header-placeholder' />\n\n        <div className='notion-board-body'>\n          {boardGroups.map((p, index) => {\n            if (!(collectionData as any).board_columns?.results) {\n              return null\n            }\n\n            const schema = collection.schema[p.property]\n            const group = (collectionData as any)[\n              `results:select:${p?.value?.value || 'uncategorized'}`\n            ]\n\n            if (!group || !schema || p.hidden) {\n              return null\n            }\n\n            return (\n              <div className='notion-board-group' key={index}>\n                {group.blockIds.map((blockId) => {\n                  const block = recordMap.block[blockId]?.value as PageBlock\n                  if (!block) return null\n\n                  return (\n                    <CollectionCard\n                      className='notion-board-group-card'\n                      collection={collection}\n                      block={block}\n                      cover={board_cover}\n                      coverSize={board_cover_size}\n                      coverAspect={board_cover_aspect}\n                      properties={collectionView.format?.board_properties}\n                      key={blockId}\n                    />\n                  )\n                })}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport const EmptyIcon = (props) => {\n  const { className, ...rest } = props\n  return (\n    <svg className={className} {...rest} viewBox='0 0 14 14' width='14'>\n      <path d='M11.0918,0 C11.5383,0 11.9307,0.295898 12.0533,0.725586 L13.9615,7.40332 C13.9871,7.49316 14,7.58594 14,7.67871 L14,13 C14,13.5527 13.5522,14 13,14 L1,14 C0.447754,14 0,13.5527 0,13 L0,7.67871 C0,7.58594 0.0129395,7.49316 0.0384521,7.40332 L1.94666,0.725586 C2.06934,0.295898 2.46167,0 2.9082,0 L11.0918,0 Z M4.27271,1.5 C3.83728,1.5 3.45178,1.78223 3.31982,2.19727 L1.91455,6.61328 C1.70947,7.25879 2.1908,7.91699 2.86755,7.91699 L4.70837,7.91699 C4.70837,8.93652 5.16663,10.168 7,10.168 C8.83337,10.168 9.29163,8.93652 9.29163,7.91699 L11.1478,7.89355 C11.8201,7.88477 12.2927,7.22852 12.0876,6.58887 L10.681,2.19531 C10.5485,1.78125 10.1635,1.5 9.72864,1.5 L4.27271,1.5 Z'></path>\n    </svg>\n  )\n}\n"],"mappings":"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","names":[]}