{"version":3,"sources":["../../src/third-party/code.tsx","../../src/components/text.tsx","../../src/context.tsx","../../src/components/asset-wrapper.tsx","../../src/components/asset.tsx","../../src/components/lazy-image.tsx","../../src/utils.ts","../../src/components/lite-youtube-embed.tsx","../../src/components/page-icon.tsx","../../src/icons/default-page-icon.tsx","../../src/components/page-title.tsx","../../src/components/graceful-image.tsx","../../src/components/external-component-github.tsx","../../src/icons/type-github.tsx","../../src/components/checkbox.tsx","../../src/icons/check.tsx","../../src/icons/copy.tsx"],"sourcesContent":["import React from 'react'\nimport { highlightElement } from 'prismjs'\nimport { CodeBlock } from 'notion-types'\nimport { getBlockTitle } from 'notion-utils'\nimport copyToClipboard from 'clipboard-copy'\n\nimport { Text } from '../components/text'\nimport { useNotionContext } from '../context'\nimport CopyIcon from '../icons/copy'\nimport { cs } from '../utils'\n\nimport 'prismjs/components/prism-markup-templating'\nimport 'prismjs/components/prism-markup'\nimport 'prismjs/components/prism-bash'\nimport 'prismjs/components/prism-c'\nimport 'prismjs/components/prism-clike'\nimport 'prismjs/components/prism-cpp'\nimport 'prismjs/components/prism-csharp'\nimport 'prismjs/components/prism-css'\nimport 'prismjs/components/prism-css-extras'\nimport 'prismjs/components/prism-docker'\nimport 'prismjs/components/prism-java'\nimport 'prismjs/components/prism-javascript'\nimport 'prismjs/components/prism-jsx'\nimport 'prismjs/components/prism-js-extras'\nimport 'prismjs/components/prism-js-templates'\nimport 'prismjs/components/prism-coffeescript'\nimport 'prismjs/components/prism-diff'\nimport 'prismjs/components/prism-git'\nimport 'prismjs/components/prism-go'\nimport 'prismjs/components/prism-graphql'\nimport 'prismjs/components/prism-handlebars'\nimport 'prismjs/components/prism-json'\nimport 'prismjs/components/prism-less'\nimport 'prismjs/components/prism-makefile'\nimport 'prismjs/components/prism-markdown'\nimport 'prismjs/components/prism-objectivec'\nimport 'prismjs/components/prism-ocaml'\nimport 'prismjs/components/prism-python'\nimport 'prismjs/components/prism-reason'\nimport 'prismjs/components/prism-rust'\nimport 'prismjs/components/prism-sass'\nimport 'prismjs/components/prism-scss'\nimport 'prismjs/components/prism-solidity'\nimport 'prismjs/components/prism-sql'\nimport 'prismjs/components/prism-stylus'\nimport 'prismjs/components/prism-swift'\nimport 'prismjs/components/prism-tsx'\nimport 'prismjs/components/prism-typescript'\nimport 'prismjs/components/prism-wasm'\nimport 'prismjs/components/prism-yaml'\n\nexport const Code: React.FC<{\n  block: CodeBlock\n  defaultLanguage?: string\n  className?: string\n}> = ({ block, defaultLanguage = 'typescript', className }) => {\n  const [isCopied, setIsCopied] = React.useState(false)\n  const copyTimeout = React.useRef<number>()\n  const { recordMap } = useNotionContext()\n  const content = getBlockTitle(block, recordMap)\n  const language = (\n    block.properties?.language?.[0]?.[0] || defaultLanguage\n  ).toLowerCase()\n  const caption = block.properties.caption\n\n  const codeRef = React.useRef()\n  React.useEffect(() => {\n    if (codeRef.current) {\n      try {\n        highlightElement(codeRef.current)\n      } catch (err) {\n        console.warn('prismjs highlight error', err)\n      }\n    }\n  }, [codeRef])\n\n  const onClickCopyToClipboard = React.useCallback(() => {\n    copyToClipboard(content)\n    setIsCopied(true)\n\n    if (copyTimeout.current) {\n      clearTimeout(copyTimeout.current)\n      copyTimeout.current = null\n    }\n\n    copyTimeout.current = setTimeout(() => {\n      setIsCopied(false)\n    }, 1200) as unknown as number\n  }, [content, copyTimeout])\n\n  const copyButton = (\n    <div className='notion-code-copy-button' onClick={onClickCopyToClipboard}>\n      <CopyIcon />\n    </div>\n  )\n\n  return (\n    <>\n      <pre className={cs('notion-code', className)}>\n        <div className='notion-code-copy'>\n          {copyButton}\n\n          {isCopied && (\n            <div className='notion-code-copy-tooltip'>\n              <div>{isCopied ? 'Copied' : 'Copy'}</div>\n            </div>\n          )}\n        </div>\n\n        <code className={`language-${language}`} ref={codeRef}>\n          {content}\n        </code>\n      </pre>\n\n      {caption && (\n        <figcaption className='notion-asset-caption'>\n          <Text value={caption} block={block} />\n        </figcaption>\n      )}\n    </>\n  )\n}\n","import React from 'react'\nimport { Block, Decoration, ExternalObjectInstance } from 'notion-types'\nimport { parsePageId } from 'notion-utils'\n\nimport { useNotionContext } from '../context'\nimport { formatDate, getHashFragmentValue } from '../utils'\nimport { PageTitle } from './page-title'\nimport { GracefulImage } from './graceful-image'\nimport { ExternalComponentGithub } from './external-component-github'\n\n/**\n * Renders a single piece of Notion text, including basic rich text formatting.\n *\n * These represent the innermost leaf nodes of a Notion subtree.\n *\n * TODO: I think this implementation would be more correct if the reduce just added\n * attributes to the final element's style.\n */\nexport const Text: React.FC<{\n  value: Decoration[]\n  block: Block\n  linkProps?: any\n  linkProtocol?: string\n  inline?: boolean // TODO: currently unused\n}> = ({ value, block, linkProps, linkProtocol }) => {\n  const { components, recordMap, mapPageUrl, mapImageUrl, rootDomain } =\n    useNotionContext()\n\n  return (\n    <React.Fragment>\n      {value?.map(([text, decorations], index) => {\n        // TODO: sometimes notion shows a max of N items to prevent overflow\n        // if (trim && index > 18) {\n        //   return null\n        // }\n\n        if (!decorations) {\n          if (text === ',') {\n            return <span key={index} style={{ padding: '0.5em' }} />\n          } else {\n            return <React.Fragment key={index}>{text}</React.Fragment>\n          }\n        }\n\n        const formatted = decorations.reduce((element, decorator) => {\n          switch (decorator[0]) {\n            case 'p': {\n              // link to an internal block (within the current workspace)\n              const blockId = decorator[1]\n              const linkedBlock = recordMap.block[blockId]?.value\n              if (!linkedBlock) {\n                console.log('\"p\" missing block', blockId)\n                return null\n              }\n\n              // console.log('p', blockId)\n\n              return (\n                <components.PageLink\n                  className='notion-link'\n                  href={mapPageUrl(blockId)}\n                >\n                  <PageTitle block={linkedBlock} />\n                </components.PageLink>\n              )\n            }\n\n            case '‣': {\n              // link to an external block (outside of the current workspace)\n              const linkType = decorator[1][0]\n              const id = decorator[1][1]\n\n              switch (linkType) {\n                case 'u': {\n                  const user = recordMap.notion_user[id]?.value\n\n                  if (!user) {\n                    console.log('\"‣\" missing user', id)\n                    return null\n                  }\n\n                  const name = [user.given_name, user.family_name]\n                    .filter(Boolean)\n                    .join(' ')\n\n                  return (\n                    <GracefulImage\n                      className='notion-user'\n                      src={mapImageUrl(user.profile_photo, block)}\n                      alt={name}\n                    />\n                  )\n                }\n\n                default: {\n                  const linkedBlock = recordMap.block[id]?.value\n\n                  if (!linkedBlock) {\n                    console.log('\"‣\" missing block', linkType, id)\n                    return null\n                  }\n\n                  return (\n                    <components.PageLink\n                      className='notion-link'\n                      href={mapPageUrl(id)}\n                      {...linkProps}\n                      target='_blank'\n                      rel='noopener noreferrer'\n                    >\n                      <PageTitle block={linkedBlock} />\n                    </components.PageLink>\n                  )\n                }\n              }\n            }\n\n            case 'h':\n              return <span className={`notion-${decorator[1]}`}>{element}</span>\n\n            case 'c':\n              return <code className='notion-inline-code'>{element}</code>\n\n            case 'b':\n              return <b>{element}</b>\n\n            case 'i':\n              return <em>{element}</em>\n\n            case 's':\n              return <s>{element}</s>\n\n            case '_':\n              return <span className='notion-inline-underscore'>{element}</span>\n\n            case 'e':\n              return <components.Equation math={decorator[1]} inline />\n\n            case 'm':\n              // comment / discussion\n              return element //still need to return the base element\n\n            case 'a': {\n              const v = decorator[1]\n              const pathname = v.substr(1)\n              const id = parsePageId(pathname, { uuid: true })\n\n              if ((v[0] === '/' || v.includes(rootDomain)) && id) {\n                const href = v.includes(rootDomain)\n                  ? v\n                  : `${mapPageUrl(id)}${getHashFragmentValue(v)}`\n\n                return (\n                  <components.PageLink\n                    className='notion-link'\n                    href={href}\n                    {...linkProps}\n                  >\n                    {element}\n                  </components.PageLink>\n                )\n              } else {\n                return (\n                  <components.Link\n                    className='notion-link'\n                    href={\n                      linkProtocol\n                        ? `${linkProtocol}:${decorator[1]}`\n                        : decorator[1]\n                    }\n                    {...linkProps}\n                  >\n                    {element}\n                  </components.Link>\n                )\n              }\n            }\n\n            case 'd': {\n              const v = decorator[1]\n              const type = v?.type\n\n              if (type === 'date') {\n                // Example: Jul 31, 2010\n                const startDate = v.start_date\n\n                return formatDate(startDate)\n              } else if (type === 'daterange') {\n                // Example: Jul 31, 2010 → Jul 31, 2020\n                const startDate = v.start_date\n                const endDate = v.end_date\n\n                return `${formatDate(startDate)} → ${formatDate(endDate)}`\n              } else {\n                return element\n              }\n            }\n\n            case 'u': {\n              const userId = decorator[1]\n              const user = recordMap.notion_user[userId]?.value\n\n              if (!user) {\n                console.log('missing user', userId)\n                return null\n              }\n\n              const name = [user.given_name, user.family_name]\n                .filter(Boolean)\n                .join(' ')\n\n              return (\n                <GracefulImage\n                  className='notion-user'\n                  src={mapImageUrl(user.profile_photo, block)}\n                  alt={name}\n                />\n              )\n            }\n\n            case 'eoi': {\n              const blockId = decorator[1]\n              const externalObjectInstance = recordMap.block[blockId]\n                ?.value as ExternalObjectInstance\n\n              switch (externalObjectInstance?.format?.domain) {\n                case 'github.com':\n                  return (\n                    <ExternalComponentGithub\n                      original_url={externalObjectInstance.format?.original_url}\n                      className={blockId}\n                    />\n                  )\n\n                default:\n                  if (process.env.NODE_ENV !== 'production') {\n                    console.log(\n                      `Unsupported external_object_instance domain ${externalObjectInstance?.format?.domain}: ` +\n                        (block as any).type,\n                      JSON.stringify(block, null, 2)\n                    )\n                  }\n\n                  return <div />\n              }\n            }\n\n            default:\n              if (process.env.NODE_ENV !== 'production') {\n                console.log('unsupported text format', decorator)\n              }\n\n              return element\n          }\n        }, <>{text}</>)\n\n        return <React.Fragment key={index}>{formatted}</React.Fragment>\n      })}\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { ExtendedRecordMap } from 'notion-types'\nimport { wrapNextImage, wrapNextLink } from './next'\nimport { AssetWrapper } from './components/asset-wrapper'\n\nimport {\n  MapPageUrl,\n  MapImageUrl,\n  SearchNotion,\n  NotionComponents\n} from './types'\nimport { defaultMapPageUrl, defaultMapImageUrl } from './utils'\nimport { Checkbox as DefaultCheckbox } from './components/checkbox'\n\nexport interface NotionContext {\n  recordMap: ExtendedRecordMap\n  components: NotionComponents\n\n  mapPageUrl: MapPageUrl\n  mapImageUrl: MapImageUrl\n  searchNotion?: SearchNotion\n\n  rootPageId?: string\n  rootDomain?: string\n\n  fullPage: boolean\n  darkMode: boolean\n  previewImages: boolean\n  forceCustomImages: boolean\n  showCollectionViewDropdown: boolean\n  showTableOfContents: boolean\n  minTableOfContentsItems: number\n\n  defaultPageIcon?: string\n  defaultPageCover?: string\n  defaultPageCoverPosition?: number\n\n  zoom: any\n}\n\nexport interface PartialNotionContext {\n  recordMap?: ExtendedRecordMap\n  components?: Partial<NotionComponents>\n\n  mapPageUrl?: MapPageUrl\n  mapImageUrl?: MapImageUrl\n  searchNotion?: SearchNotion\n\n  rootPageId?: string\n  rootDomain?: string\n\n  fullPage?: boolean\n  darkMode?: boolean\n  previewImages?: boolean\n  forceCustomImages?: boolean\n  showCollectionViewDropdown?: boolean\n\n  showTableOfContents?: boolean\n  minTableOfContentsItems?: number\n\n  defaultPageIcon?: string\n  defaultPageCover?: string\n  defaultPageCoverPosition?: number\n\n  zoom?: any\n}\n\nconst DefaultLink: React.FC = (props) => (\n  <a target='_blank' rel='noopener noreferrer' {...props} />\n)\nconst DefaultPageLink: React.FC = (props) => <a {...props} />\n\nconst DefaultEmbed = AssetWrapper\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const dummyLink = ({ href, rel, target, title, ...rest }) => (\n  <span {...rest} />\n)\n\nconst dummyComponent = (name: string) => () => {\n  console.warn(\n    `Warning: using empty component \"${name}\" (you should override this in NotionRenderer.components)`\n  )\n\n  return null\n}\n\nconst defaultComponents: NotionComponents = {\n  Image: null, // disable custom images by default\n  Link: DefaultLink,\n  PageLink: DefaultPageLink,\n  Checkbox: DefaultCheckbox,\n\n  Code: dummyComponent('Code'),\n  Equation: dummyComponent('Equation'),\n\n  Collection: dummyComponent('Collection'),\n\n  Pdf: dummyComponent('Pdf'),\n  Tweet: dummyComponent('Tweet'),\n  Modal: dummyComponent('Modal'),\n\n  Embed: DefaultEmbed\n}\n\nconst defaultNotionContext: NotionContext = {\n  recordMap: {\n    block: {},\n    collection: {},\n    collection_view: {},\n    collection_query: {},\n    notion_user: {},\n    signed_urls: {}\n  },\n\n  components: defaultComponents,\n\n  mapPageUrl: defaultMapPageUrl(),\n  mapImageUrl: defaultMapImageUrl,\n  searchNotion: null,\n\n  fullPage: false,\n  darkMode: false,\n  previewImages: false,\n  forceCustomImages: false,\n  showCollectionViewDropdown: true,\n\n  showTableOfContents: false,\n  minTableOfContentsItems: 3,\n\n  defaultPageIcon: null,\n  defaultPageCover: null,\n  defaultPageCoverPosition: 0.5,\n\n  zoom: null\n}\n\nconst ctx = React.createContext<NotionContext>(defaultNotionContext)\n\nexport const NotionContextProvider: React.SFC<PartialNotionContext> = ({\n  components: themeComponents = {},\n  children,\n  mapPageUrl,\n  mapImageUrl,\n  rootPageId,\n  ...rest\n}) => {\n  for (const key of Object.keys(rest)) {\n    if (rest[key] === undefined) {\n      delete rest[key]\n    }\n  }\n\n  const wrappedThemeComponents = {\n    ...themeComponents\n  }\n\n  if (wrappedThemeComponents.nextImage) {\n    wrappedThemeComponents.Image = wrapNextImage(themeComponents.nextImage)\n  }\n\n  if (wrappedThemeComponents.nextLink) {\n    wrappedThemeComponents.nextLink = wrapNextLink(themeComponents.nextLink)\n  }\n\n  // ensure the user can't override default components with falsy values\n  // since it would result in very difficult-to-debug react errors\n  for (const key of Object.keys(wrappedThemeComponents)) {\n    if (!wrappedThemeComponents[key]) {\n      delete wrappedThemeComponents[key]\n    }\n  }\n\n  return (\n    <ctx.Provider\n      value={{\n        ...defaultNotionContext,\n        ...rest,\n        rootPageId,\n        mapPageUrl: mapPageUrl ?? defaultMapPageUrl(rootPageId),\n        mapImageUrl: mapImageUrl ?? defaultMapImageUrl,\n        components: { ...defaultComponents, ...wrappedThemeComponents }\n      }}\n    >\n      {children}\n    </ctx.Provider>\n  )\n}\n\nexport const NotionContextConsumer = ctx.Consumer\n\nexport const useNotionContext = (): NotionContext => {\n  return React.useContext(ctx)\n}\n","import React from 'react'\nimport { BaseContentBlock, Block } from 'notion-types'\nimport { Asset } from './asset'\nimport { cs } from '../utils'\nimport { Text } from './text'\nimport { useNotionContext } from '..'\nimport { parsePageId } from 'notion-utils'\n\nexport const AssetWrapper: React.FC<{\n  blockId: string\n  block: Block\n}> = ({ blockId, block }) => {\n  const value = block as BaseContentBlock\n  const { components, mapPageUrl, rootDomain } = useNotionContext()\n\n  let isURL = false\n  if (value?.properties?.caption?.length > 0) {\n    const caption: string = value?.properties?.caption[0][0]\n    const id = parsePageId(caption, { uuid: true })\n\n    const isPage = caption.charAt(0) === '/' && id\n    if ((block.type == 'image' && isValidURL(caption)) || isPage) {\n      isURL = true\n    }\n  }\n\n  const figure = (\n    <figure\n      className={cs(\n        'notion-asset-wrapper',\n        `notion-asset-wrapper-${block.type}`,\n        value.format?.block_full_width && 'notion-asset-wrapper-full',\n        blockId\n      )}\n    >\n      <Asset block={value}>\n        {value?.properties?.caption && !isURL && (\n          <figcaption className='notion-asset-caption'>\n            <Text value={value.properties.caption} block={block} />\n          </figcaption>\n        )}\n      </Asset>\n    </figure>\n  )\n\n  // allows for an image to be a link\n  if (isURL) {\n    const caption: string = value?.properties?.caption[0][0]\n    const id = parsePageId(caption, { uuid: true })\n    const isPage = caption.charAt(0) === '/' && id\n    const captionHostname = extractHostname(caption)\n\n    return (\n      <components.PageLink\n        style={{ width: '100%' }}\n        href={isPage ? mapPageUrl(id) : caption}\n        target={\n          captionHostname &&\n          captionHostname !== rootDomain &&\n          !caption.startsWith('/')\n            ? 'blank_'\n            : null\n        }\n      >\n        {figure}\n      </components.PageLink>\n    )\n  }\n\n  return <>{figure}</>\n}\n\nfunction isValidURL(str) {\n  // TODO: replace this with a more well-tested package\n  const pattern = new RegExp(\n    '^(https?:\\\\/\\\\/)?' + // protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n      '(\\\\#[-a-z\\\\d_]*)?$',\n    'i'\n  )\n  return !!pattern.test(str)\n}\n\nfunction extractHostname(url) {\n  try {\n    const hostname = new URL(url).hostname\n    return hostname\n  } catch (err) {\n    return ''\n  }\n}\n","import React from 'react'\nimport { BaseContentBlock, Block } from 'notion-types'\nimport { getTextContent } from 'notion-utils'\n\nimport { useNotionContext } from '../context'\nimport { LazyImage } from './lazy-image'\nimport { LiteYouTubeEmbed } from './lite-youtube-embed'\nimport { getYoutubeId } from '../utils'\n\nconst isServer = typeof window === 'undefined'\n\nconst types = [\n  'video',\n  'image',\n  'embed',\n  'figma',\n  'typeform',\n  'excalidraw',\n  'maps',\n  'tweet',\n  'pdf',\n  'gist',\n  'codepen',\n  'drive'\n]\n\nexport const Asset: React.FC<{\n  block: BaseContentBlock\n  children: any\n}> = ({ block, children }) => {\n  const { recordMap, mapImageUrl, components } = useNotionContext()\n\n  if (!block || !types.includes(block.type)) {\n    return null\n  }\n\n  const style: React.CSSProperties = {\n    position: 'relative',\n    display: 'flex',\n    justifyContent: 'center',\n    alignSelf: 'center',\n    width: '100%',\n    maxWidth: '100%',\n    flexDirection: 'column'\n  }\n\n  const assetStyle: React.CSSProperties = {}\n  // console.log('asset', block)\n\n  if (block.format) {\n    const {\n      block_aspect_ratio,\n      block_height,\n      block_width,\n      block_full_width,\n      block_page_width,\n      block_preserve_scale\n    } = block.format\n\n    if (block_full_width || block_page_width) {\n      if (block_full_width) {\n        style.width = '100vw'\n      } else {\n        style.width = '100%'\n      }\n\n      if (block.type === 'video') {\n        if (block_height) {\n          style.height = block_height\n        } else if (block_aspect_ratio) {\n          style.paddingBottom = `${block_aspect_ratio * 100}%`\n        } else if (block_preserve_scale) {\n          style.objectFit = 'contain'\n        }\n      } else if (block_aspect_ratio && block.type !== 'image') {\n        // console.log(block.type, block)\n        style.paddingBottom = `${block_aspect_ratio * 100}%`\n      } else if (block_height) {\n        style.height = block_height\n      } else if (block_preserve_scale) {\n        if (block.type === 'image') {\n          style.height = '100%'\n        } else {\n          // TODO: this is just a guess\n          style.paddingBottom = '75%'\n          style.minHeight = 100\n        }\n      }\n    } else {\n      if (block_width) {\n        style.width = block_width\n      }\n\n      if (block_preserve_scale && block.type !== 'image') {\n        style.paddingBottom = '50%'\n        style.minHeight = 100\n      } else {\n        if (block_height && block.type !== 'image') {\n          style.height = block_height\n        }\n      }\n    }\n\n    if (block.type === 'image') {\n      assetStyle.objectFit = 'cover'\n    } else if (block_preserve_scale) {\n      assetStyle.objectFit = 'contain'\n    }\n  }\n\n  const source = block.properties?.source?.[0]?.[0]\n  let content = null\n\n  if (block.type === 'tweet') {\n    const src = source\n    if (!src) return null\n\n    const id = src.split('?')[0].split('/').pop()\n    if (!id) return null\n\n    content = (\n      <div\n        style={{\n          ...assetStyle,\n          maxWidth: 420,\n          width: '100%',\n          marginLeft: 'auto',\n          marginRight: 'auto'\n        }}\n      >\n        <components.Tweet id={id} />\n      </div>\n    )\n  } else if (block.type === 'pdf') {\n    style.overflow = 'auto'\n    style.padding = '8px 16px'\n    style.background = 'rgb(226, 226, 226)'\n\n    if (!isServer) {\n      const signedUrl = recordMap.signed_urls?.[block.id]\n      if (!signedUrl) return null\n      // console.log('pdf', block, signedUrl)\n\n      content = <components.Pdf file={signedUrl} />\n    }\n  } else if (\n    block.type === 'embed' ||\n    block.type === 'video' ||\n    block.type === 'figma' ||\n    block.type === 'typeform' ||\n    block.type === 'gist' ||\n    block.type === 'maps' ||\n    block.type === 'excalidraw' ||\n    block.type === 'codepen' ||\n    block.type === 'drive'\n  ) {\n    const signedUrl = recordMap.signed_urls[block.id]\n\n    if (\n      block.type === 'video' &&\n      signedUrl &&\n      signedUrl.indexOf('youtube') < 0 &&\n      signedUrl.indexOf('youtu.be') < 0 &&\n      signedUrl.indexOf('vimeo') < 0 &&\n      signedUrl.indexOf('wistia') < 0 &&\n      signedUrl.indexOf('loom') < 0 &&\n      signedUrl.indexOf('videoask') < 0 &&\n      signedUrl.indexOf('getcloudapp') < 0\n    ) {\n      content = (\n        <video\n          playsInline\n          controls\n          preload='metadata'\n          style={assetStyle}\n          src={signedUrl}\n          title={block.type}\n        />\n      )\n    } else {\n      let src = block.format?.display_source ?? source\n\n      if (src) {\n        const youtubeVideoId: string | null =\n          block.type === 'video' ? getYoutubeId(src) : null\n\n        console.log({ youtubeVideoId, src, format: block.format, style })\n\n        if (youtubeVideoId) {\n          content = (\n            <LiteYouTubeEmbed\n              id={youtubeVideoId}\n              style={assetStyle}\n              className='notion-asset-object-fit'\n            />\n          )\n        } else if (block.type === 'gist') {\n          if (!src.endsWith('.pibb')) {\n            src = `${src}.pibb`\n          }\n\n          assetStyle.width = '100%'\n          style.paddingBottom = '50%'\n\n          // TODO: GitHub gists do not resize their height properly\n          content = (\n            <iframe\n              style={assetStyle}\n              className='notion-asset-object-fit'\n              src={src}\n              title='GitHub Gist'\n              frameBorder='0'\n              // TODO: is this sandbox necessary?\n              // sandbox='allow-scripts allow-popups allow-top-navigation-by-user-activation allow-forms allow-same-origin'\n              // this is important for perf but react's TS definitions don't seem to like it\n              loading='lazy'\n              scrolling='auto'\n            />\n          )\n        } else {\n          content = (\n            <iframe\n              className='notion-asset-object-fit'\n              style={assetStyle}\n              src={src}\n              title={`iframe ${block.type}`}\n              frameBorder='0'\n              // TODO: is this sandbox necessary?\n              // sandbox='allow-scripts allow-popups allow-top-navigation-by-user-activation allow-forms allow-same-origin'\n              allowFullScreen\n              // this is important for perf but react's TS definitions don't seem to like it\n              loading='lazy'\n            />\n          )\n        }\n      }\n    }\n  } else if (block.type === 'image') {\n    // console.log('image', block)\n\n    const signedUrl = recordMap.signed_urls?.[block.id]\n    const src = mapImageUrl(signedUrl || source, block as Block)\n    const caption = getTextContent(block.properties?.caption)\n    const alt = caption || 'notion image'\n\n    content = (\n      <LazyImage\n        src={src}\n        alt={alt}\n        zoomable={true}\n        height={style.height as number}\n        style={assetStyle}\n      />\n    )\n  }\n\n  return (\n    <>\n      <div style={style}>\n        {content}\n        {block.type === 'image' && children}\n      </div>\n\n      {block.type !== 'image' && children}\n    </>\n  )\n}\n","import React from 'react'\nimport { LazyImageFull, ImageState } from 'react-lazy-images'\nimport { normalizeUrl } from 'notion-utils'\nimport { useNotionContext } from '../context'\nimport { cs } from '../utils'\n\n/**\n * Progressive, lazy images modeled after Medium's LQIP technique.\n */\nexport const LazyImage: React.FC<{\n  src?: string\n  alt?: string\n  className?: string\n  style?: React.CSSProperties\n  height?: number\n  zoomable?: boolean\n  priority?: boolean\n}> = ({\n  src,\n  alt,\n  className,\n  style,\n  zoomable = false,\n  priority = false,\n  height,\n  ...rest\n}) => {\n  const { recordMap, zoom, previewImages, forceCustomImages, components } =\n    useNotionContext()\n\n  const zoomRef = React.useRef(zoom ? zoom.clone() : null)\n  const previewImage = previewImages\n    ? recordMap?.preview_images?.[src] ??\n      recordMap?.preview_images?.[normalizeUrl(src)]\n    : null\n\n  const onLoad = React.useCallback(\n    (e: any) => {\n      if (zoomable && (e.target.src || e.target.srcset)) {\n        if (zoomRef.current) {\n          ;(zoomRef.current as any).attach(e.target)\n        }\n      }\n    },\n    [zoomRef, zoomable]\n  )\n\n  const attachZoom = React.useCallback(\n    (image: any) => {\n      if (zoomRef.current && image) {\n        ;(zoomRef.current as any).attach(image)\n      }\n    },\n    [zoomRef]\n  )\n\n  const attachZoomRef = React.useMemo(\n    () => (zoomable ? attachZoom : undefined),\n    [zoomable, attachZoom]\n  )\n\n  if (previewImage) {\n    const aspectRatio = previewImage.originalHeight / previewImage.originalWidth\n\n    if (components.Image) {\n      // TODO: could try using next/image onLoadComplete to replace LazyImageFull\n      // while retaining our blur implementation\n      return (\n        <components.Image\n          src={src}\n          alt={alt}\n          style={style}\n          className={className}\n          width={previewImage.originalWidth}\n          height={previewImage.originalHeight}\n          blurDataURL={previewImage.dataURIBase64}\n          placeholder='blur'\n          priority={priority}\n          onLoad={onLoad}\n        />\n      )\n    }\n\n    return (\n      <LazyImageFull src={src} {...rest} experimentalDecode={true}>\n        {({ imageState, ref }) => {\n          const isLoaded = imageState === ImageState.LoadSuccess\n          const wrapperStyle: React.CSSProperties = {\n            width: '100%'\n          }\n          const imgStyle: React.CSSProperties = {}\n\n          if (height) {\n            wrapperStyle.height = height\n          } else {\n            imgStyle.position = 'absolute'\n            wrapperStyle.paddingBottom = `${aspectRatio * 100}%`\n          }\n\n          return (\n            <div\n              className={cs(\n                'lazy-image-wrapper',\n                isLoaded && 'lazy-image-loaded',\n                className\n              )}\n              style={wrapperStyle}\n            >\n              <img\n                className='lazy-image-preview'\n                src={previewImage.dataURIBase64}\n                alt={alt}\n                ref={ref}\n                style={style}\n                decoding='async'\n              />\n\n              <img\n                className='lazy-image-real'\n                src={src}\n                alt={alt}\n                ref={attachZoomRef}\n                style={{\n                  ...style,\n                  ...imgStyle\n                }}\n                width={previewImage.originalWidth}\n                height={previewImage.originalHeight}\n                decoding='async'\n                loading='lazy'\n              />\n            </div>\n          )\n        }}\n      </LazyImageFull>\n    )\n  } else {\n    // TODO: GracefulImage doesn't seem to support refs, but we'd like to prevent\n    // invalid images from loading as error states\n\n    /*\n      NOTE: Using next/image without a pre-defined width/height is a huge pain in\n      the ass. If we have a preview image, then this works fine since we know the\n      dimensions ahead of time, but if we don't, then next/image won't display\n      anything.\n      \n      Since next/image is the most common use case for using custom images, and this \n      is likely to trip people up, we're disabling non-preview custom images for now.\n\n      If you have a use case that is affected by this, please open an issue on github.\n    */\n    if (components.Image && forceCustomImages) {\n      return (\n        <components.Image\n          src={src}\n          alt={alt}\n          className={className}\n          style={style}\n          width={null}\n          height={height || null}\n          priority={priority}\n          onLoad={onLoad}\n        />\n      )\n    }\n\n    // Default image element\n    return (\n      <img\n        className={className}\n        style={style}\n        src={src}\n        alt={alt}\n        ref={attachZoomRef}\n        loading='lazy'\n        decoding='async'\n        {...rest}\n      />\n    )\n  }\n}\n","import { Block, BlockMap } from 'notion-types'\nimport isUrl from 'is-url-superb'\n\nexport const defaultMapImageUrl = (url: string, block: Block) => {\n  if (!url) {\n    return null\n  }\n\n  if (url.startsWith('data:')) {\n    return url\n  }\n\n  // more recent versions of notion don't proxy unsplash images\n  if (url.startsWith('https://images.unsplash.com')) {\n    return url\n  }\n\n  if (url.startsWith('/images')) {\n    url = `https://www.notion.so${url}`\n  }\n\n  url = `https://www.notion.so${\n    url.startsWith('/image') ? url : `/image/${encodeURIComponent(url)}`\n  }`\n\n  const notionImageUrlV2 = new URL(url)\n  let table = block.parent_table === 'space' ? 'block' : block.parent_table\n  if (table === 'collection') {\n    table = 'block'\n  }\n  notionImageUrlV2.searchParams.set('table', table)\n  notionImageUrlV2.searchParams.set('id', block.id)\n  notionImageUrlV2.searchParams.set('cache', 'v2')\n\n  url = notionImageUrlV2.toString()\n\n  return url\n}\n\nexport const defaultMapPageUrl = (rootPageId?: string) => (pageId: string) => {\n  pageId = (pageId || '').replace(/-/g, '')\n\n  if (rootPageId && pageId === rootPageId) {\n    return '/'\n  } else {\n    return `/${pageId}`\n  }\n}\n\nexport const cs = (...classes: Array<string | undefined | false>) =>\n  classes.filter((a) => !!a).join(' ')\n\nconst groupBlockContent = (blockMap: BlockMap): string[][] => {\n  const output: string[][] = []\n\n  let lastType: string | undefined = undefined\n  let index = -1\n\n  Object.keys(blockMap).forEach((id) => {\n    const blockValue = blockMap[id]?.value\n\n    if (blockValue) {\n      blockValue.content?.forEach((blockId) => {\n        const blockType = blockMap[blockId]?.value?.type\n\n        if (blockType && blockType !== lastType) {\n          index++\n          lastType = blockType\n          output[index] = []\n        }\n\n        if (index > -1) {\n          output[index].push(blockId)\n        }\n      })\n    }\n\n    lastType = undefined\n  })\n\n  return output\n}\n\nexport const getListNumber = (blockId: string, blockMap: BlockMap) => {\n  const groups = groupBlockContent(blockMap)\n  const group = groups.find((g) => g.includes(blockId))\n\n  if (!group) {\n    return\n  }\n\n  return group.indexOf(blockId) + 1\n}\n\nexport const getHashFragmentValue = (url: string) => {\n  return url.includes('#') ? url.replace(/^.+(#.+)$/, '$1') : ''\n}\n\nconst months = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec'\n]\n\nexport const formatDate = (input: string) => {\n  const date = new Date(input)\n  const month = date.getMonth()\n  return `${months[month]} ${date.getUTCDate()}, ${date.getUTCFullYear()}`\n}\n\nexport const isBrowser = typeof window !== 'undefined'\n\nexport { isUrl }\n\nconst youtubeDomains = new Set([\n  'youtu.be',\n  'youtube.com',\n  'www.youtube.com',\n  'youtube-nocookie.com',\n  'www.youtube-nocookie.com'\n])\n\nexport const getYoutubeId = (url: string): string | null => {\n  try {\n    const { hostname } = new URL(url)\n    if (!youtubeDomains.has(hostname)) {\n      return null\n    }\n    const regExp =\n      /^.*(youtu\\.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/i\n\n    const match = url.match(regExp)\n    if (match && match[2].length == 11) {\n      return match[2]\n    }\n  } catch {\n    // ignore invalid urls\n  }\n\n  return null\n}\n","import React from 'react'\nimport { cs } from '../utils'\n\nconst qs = (params: Record<string, string>) => {\n  return Object.keys(params)\n    .map(\n      (key) => `${encodeURIComponent(key)}=${encodeURIComponent(params[key])}`\n    )\n    .join('&')\n}\n\nexport const LiteYouTubeEmbed: React.FC<{\n  id: string\n  defaultPlay?: boolean\n  mute?: boolean\n  lazyImage?: boolean\n  iframeTitle?: string\n  alt?: string\n  params?: Record<string, string>\n  adLinksPreconnect?: boolean\n  style?: React.CSSProperties\n  className?: string\n}> = ({\n  id,\n  defaultPlay = false,\n  mute = false,\n  lazyImage = false,\n  iframeTitle = 'YouTube video',\n  alt = 'Video preview',\n  params = {},\n  adLinksPreconnect = true,\n  style,\n  className\n}) => {\n  const muteParam = mute || defaultPlay ? '1' : '0' // Default play must be muted\n  const queryString = React.useMemo(\n    () => qs({ autoplay: '1', mute: muteParam, ...params }),\n    [muteParam, params]\n  )\n  // const mobileResolution = 'hqdefault'\n  // const desktopResolution = 'maxresdefault'\n  const resolution = 'hqdefault'\n  const posterUrl = `https://i.ytimg.com/vi/${id}/${resolution}.jpg`\n  const ytUrl = 'https://www.youtube-nocookie.com'\n  const iframeSrc = `${ytUrl}/embed/${id}?${queryString}`\n\n  const [isPreconnected, setIsPreconnected] = React.useState(false)\n  const [iframeInitialized, setIframeInitialized] = React.useState(defaultPlay)\n  const [isIframeLoaded, setIsIframeLoaded] = React.useState(false)\n\n  const warmConnections = React.useCallback(() => {\n    if (isPreconnected) return\n    setIsPreconnected(true)\n  }, [isPreconnected])\n\n  const onLoadIframe = React.useCallback(() => {\n    if (iframeInitialized) return\n    setIframeInitialized(true)\n  }, [iframeInitialized])\n\n  const onIframeLoaded = React.useCallback(() => {\n    setIsIframeLoaded(true)\n  }, [])\n\n  return (\n    <>\n      <link rel='preload' href={posterUrl} as='image' />\n\n      {isPreconnected && (\n        <>\n          {/* The iframe document and most of its subresources come from youtube.com */}\n          <link rel='preconnect' href={ytUrl} />\n\n          {/* The botguard script is fetched off from google.com */}\n          <link rel='preconnect' href='https://www.google.com' />\n        </>\n      )}\n\n      {isPreconnected && adLinksPreconnect && (\n        <>\n          {/* Not certain if these ad related domains are in the critical path. Could verify with domain-specific throttling. */}\n          <link rel='preconnect' href='https://static.doubleclick.net' />\n          <link rel='preconnect' href='https://googleads.g.doubleclick.net' />\n        </>\n      )}\n\n      <div\n        onClick={onLoadIframe}\n        onPointerOver={warmConnections}\n        className={cs(\n          'notion-yt-lite',\n          isIframeLoaded && 'notion-yt-loaded',\n          iframeInitialized && 'notion-yt-initialized',\n          className\n        )}\n        style={style}\n      >\n        <img\n          src={posterUrl}\n          className='notion-yt-thumbnail'\n          loading={lazyImage ? 'lazy' : undefined}\n          alt={alt}\n        />\n\n        <div className='notion-yt-playbtn' />\n\n        {iframeInitialized && (\n          <iframe\n            width='560'\n            height='315'\n            frameBorder='0'\n            allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture'\n            allowFullScreen\n            title={iframeTitle}\n            src={iframeSrc}\n            onLoad={onIframeLoaded}\n          />\n        )}\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { getBlockIcon, getBlockTitle } from 'notion-utils'\nimport { Block, PageBlock, CalloutBlock } from 'notion-types'\n\nimport { cs, isUrl } from '../utils'\nimport { DefaultPageIcon } from '../icons/default-page-icon'\nimport { useNotionContext } from '../context'\n// import { GracefulImage } from './graceful-image'\nimport { LazyImage } from './lazy-image'\n\nconst isIconBlock = (value: Block): value is PageBlock | CalloutBlock => {\n  return (\n    value.type === 'page' ||\n    value.type === 'callout' ||\n    value.type === 'collection_view' ||\n    value.type === 'collection_view_page'\n  )\n}\n\nexport const PageIcon: React.FC<{\n  block: Block\n  className?: string\n  inline?: boolean\n  hideDefaultIcon?: boolean\n  defaultIcon?: string\n}> = ({\n  block,\n  className,\n  inline = true,\n  hideDefaultIcon = false,\n  defaultIcon\n}) => {\n  const { mapImageUrl, recordMap } = useNotionContext()\n  let isImage = false\n  let content: any = null\n\n  if (isIconBlock(block)) {\n    const icon = getBlockIcon(block, recordMap)?.trim() || defaultIcon\n    const title = getBlockTitle(block, recordMap)\n\n    if (icon && isUrl(icon)) {\n      const url = mapImageUrl(icon, block)\n      isImage = true\n\n      content = (\n        <LazyImage\n          src={url}\n          alt={title || 'page icon'}\n          className={cs(className, 'notion-page-icon')}\n        />\n      )\n    } else if (!icon) {\n      if (!hideDefaultIcon) {\n        isImage = true\n        content = (\n          <DefaultPageIcon\n            className={cs(className, 'notion-page-icon')}\n            alt={title ? title : 'page icon'}\n          />\n        )\n      }\n    } else {\n      isImage = false\n      content = (\n        <span\n          className={cs(className, 'notion-page-icon')}\n          role='img'\n          aria-label={icon}\n        >\n          {icon}\n        </span>\n      )\n    }\n  }\n\n  if (!content) {\n    return null\n  }\n\n  return (\n    <div\n      className={cs(\n        inline ? 'notion-page-icon-inline' : 'notion-page-icon-hero',\n        isImage ? 'notion-page-icon-image' : 'notion-page-icon-span'\n      )}\n    >\n      {content}\n    </div>\n  )\n}\n","import React from 'react'\n\nexport const DefaultPageIcon = (props) => {\n  const { className, ...rest } = props\n  return (\n    <svg className={className} {...rest} viewBox='0 0 30 30' width='16'>\n      <path d='M16,1H4v28h22V11L16,1z M16,3.828L23.172,11H16V3.828z M24,27H6V3h8v10h10V27z M8,17h14v-2H8V17z M8,21h14v-2H8V21z M8,25h14v-2H8V25z'></path>\n    </svg>\n  )\n}\n","import React from 'react'\nimport { Block } from 'notion-types'\n\nimport { cs } from '../utils'\nimport { useNotionContext } from '../context'\nimport { Text } from './text'\nimport { PageIcon } from './page-icon'\n\nexport const PageTitle: React.FC<{\n  block: Block\n  className?: string\n  defaultIcon?: string\n}> = ({ block, className, defaultIcon, ...rest }) => {\n  const { recordMap } = useNotionContext()\n\n  if (!block) return null\n\n  // TODO: replace with getBlockTitle\n  if (\n    block.type === 'collection_view_page' ||\n    block.type === 'collection_view'\n  ) {\n    const collection = recordMap.collection[block.collection_id]?.value\n\n    if (collection) {\n      block.properties = {\n        ...block.properties,\n        title: collection.name\n      }\n\n      block.format = {\n        ...block.format,\n        page_icon: collection.icon\n      }\n    }\n  }\n\n  if (!block.properties?.title) {\n    return null\n  }\n\n  return (\n    <span className={cs('notion-page-title', className)} {...rest}>\n      <PageIcon\n        block={block}\n        defaultIcon={defaultIcon}\n        className='notion-page-title-icon'\n      />\n\n      <span className='notion-page-title-text'>\n        <Text value={block.properties?.title} block={block} />\n      </span>\n    </span>\n  )\n}\n","import React from 'react'\nimport { Img, ImgProps } from 'react-image'\nimport { isBrowser } from '../utils'\n\nexport const GracefulImage = (props: ImgProps) => {\n  if (isBrowser) {\n    return <Img {...props} />\n  } else {\n    // @ts-expect-error (must use the appropriate subset of props for <img> if using SSR)\n    return <img {...props} />\n  }\n}\n","import React, { useEffect, useState } from 'react'\n\nimport { useNotionContext } from '../context'\nimport { cs } from '../utils'\nimport SvgTypeGitHub from '../icons/type-github'\n\ninterface GitHubRepo {\n  name: string\n  owner: {\n    login: string\n    avatar_url: string\n  }\n  updated_at: string\n}\n\nexport const ExternalComponentGithub: React.FC<{\n  original_url: string\n  block?: boolean\n  className?: string\n}> = ({ original_url, block, className }) => {\n  const { components } = useNotionContext()\n  const url = new URL(original_url)\n  const [name, setName] = useState<string>(url.pathname.substring(1))\n  const [githubRepo, setGithubRepo] = useState<GitHubRepo>()\n\n  useEffect(() => {\n    // let's do a call to github api, by extracting repo from url\n    fetch(`https://api.github.com/repos/${name}`)\n      .then((response) => {\n        if (!response.ok) {\n          throw Error(response.statusText)\n        }\n        return response.json()\n      })\n      .then((data) => {\n        setGithubRepo(data)\n        setName(data.name)\n      })\n      .catch((err) => console.error(err))\n  }, [name])\n\n  return (\n    <components.Link\n      target='_blank'\n      rel='noopener noreferrer'\n      href={original_url}\n      className={cs(\n        'notion-external',\n        block ? 'notion-external-block notion-row' : 'notion-external-mention',\n        className\n      )}\n    >\n      <div className='notion-external-image'>\n        <SvgTypeGitHub />\n      </div>\n\n      <div className='notion-external-description'>\n        <div className='notion-external-title'>{name}</div>\n\n        {githubRepo && (\n          <div className='notion-external-subtitle'>\n            {`${\n              githubRepo.owner.login\n            } • Updated on ${githubRepo.updated_at.substring(0, 10)}`}\n          </div>\n        )}\n      </div>\n    </components.Link>\n  )\n}\n","import React from 'react'\n\nfunction SvgTypeGitHub(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 260 260' {...props}>\n      <g>\n        <path\n          d='M128.00106,0 C57.3172926,0 0,57.3066942 0,128.00106 C0,184.555281 36.6761997,232.535542 87.534937,249.460899 C93.9320223,250.645779 96.280588,246.684165 96.280588,243.303333 C96.280588,240.251045 96.1618878,230.167899 96.106777,219.472176 C60.4967585,227.215235 52.9826207,204.369712 52.9826207,204.369712 C47.1599584,189.574598 38.770408,185.640538 38.770408,185.640538 C27.1568785,177.696113 39.6458206,177.859325 39.6458206,177.859325 C52.4993419,178.762293 59.267365,191.04987 59.267365,191.04987 C70.6837675,210.618423 89.2115753,204.961093 96.5158685,201.690482 C97.6647155,193.417512 100.981959,187.77078 104.642583,184.574357 C76.211799,181.33766 46.324819,170.362144 46.324819,121.315702 C46.324819,107.340889 51.3250588,95.9223682 59.5132437,86.9583937 C58.1842268,83.7344152 53.8029229,70.715562 60.7532354,53.0843636 C60.7532354,53.0843636 71.5019501,49.6441813 95.9626412,66.2049595 C106.172967,63.368876 117.123047,61.9465949 128.00106,61.8978432 C138.879073,61.9465949 149.837632,63.368876 160.067033,66.2049595 C184.49805,49.6441813 195.231926,53.0843636 195.231926,53.0843636 C202.199197,70.715562 197.815773,83.7344152 196.486756,86.9583937 C204.694018,95.9223682 209.660343,107.340889 209.660343,121.315702 C209.660343,170.478725 179.716133,181.303747 151.213281,184.472614 C155.80443,188.444828 159.895342,196.234518 159.895342,208.176593 C159.895342,225.303317 159.746968,239.087361 159.746968,243.303333 C159.746968,246.709601 162.05102,250.70089 168.53925,249.443941 C219.370432,232.499507 256,184.536204 256,128.00106 C256,57.3066942 198.691187,0 128.00106,0 Z M47.9405593,182.340212 C47.6586465,182.976105 46.6581745,183.166873 45.7467277,182.730227 C44.8183235,182.312656 44.2968914,181.445722 44.5978808,180.80771 C44.8734344,180.152739 45.876026,179.97045 46.8023103,180.409216 C47.7328342,180.826786 48.2627451,181.702199 47.9405593,182.340212 Z M54.2367892,187.958254 C53.6263318,188.524199 52.4329723,188.261363 51.6232682,187.366874 C50.7860088,186.474504 50.6291553,185.281144 51.2480912,184.70672 C51.8776254,184.140775 53.0349512,184.405731 53.8743302,185.298101 C54.7115892,186.201069 54.8748019,187.38595 54.2367892,187.958254 Z M58.5562413,195.146347 C57.7719732,195.691096 56.4895886,195.180261 55.6968417,194.042013 C54.9125733,192.903764 54.9125733,191.538713 55.713799,190.991845 C56.5086651,190.444977 57.7719732,190.936735 58.5753181,192.066505 C59.3574669,193.22383 59.3574669,194.58888 58.5562413,195.146347 Z M65.8613592,203.471174 C65.1597571,204.244846 63.6654083,204.03712 62.5716717,202.981538 C61.4524999,201.94927 61.1409122,200.484596 61.8446341,199.710926 C62.5547146,198.935137 64.0575422,199.15346 65.1597571,200.200564 C66.2704506,201.230712 66.6095936,202.705984 65.8613592,203.471174 Z M75.3025151,206.281542 C74.9930474,207.284134 73.553809,207.739857 72.1039724,207.313809 C70.6562556,206.875043 69.7087748,205.700761 70.0012857,204.687571 C70.302275,203.678621 71.7478721,203.20382 73.2083069,203.659543 C74.6539041,204.09619 75.6035048,205.261994 75.3025151,206.281542 Z M86.046947,207.473627 C86.0829806,208.529209 84.8535871,209.404622 83.3316829,209.4237 C81.8013,209.457614 80.563428,208.603398 80.5464708,207.564772 C80.5464708,206.498591 81.7483088,205.631657 83.2786917,205.606221 C84.8005962,205.576546 86.046947,206.424403 86.046947,207.473627 Z M96.6021471,207.069023 C96.7844366,208.099171 95.7267341,209.156872 94.215428,209.438785 C92.7295577,209.710099 91.3539086,209.074206 91.1652603,208.052538 C90.9808515,206.996955 92.0576306,205.939253 93.5413813,205.66582 C95.054807,205.402984 96.4092596,206.021919 96.6021471,207.069023 Z'\n          fill='#161614'\n        ></path>\n      </g>\n    </svg>\n  )\n}\n\nexport default SvgTypeGitHub\n","import React from 'react'\n\nimport CheckIcon from '../icons/check'\n\nexport const Checkbox: React.FC<{\n  isChecked: boolean\n  blockId: string | undefined\n}> = ({ isChecked }) => {\n  let content = null\n\n  if (isChecked) {\n    content = (\n      <div className='notion-property-checkbox-checked'>\n        <CheckIcon />\n      </div>\n    )\n  } else {\n    content = <div className='notion-property-checkbox-unchecked' />\n  }\n\n  return (\n    <span className='notion-property notion-property-checkbox'>{content}</span>\n  )\n}\n","import React from 'react'\n\nfunction SvgCheck(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg viewBox='0 0 14 14' {...props}>\n      <path d='M5.5 12L14 3.5 12.5 2l-7 7-4-4.003L0 6.499z' />\n    </svg>\n  )\n}\n\nexport default SvgCheck\n","import React from 'react'\n\nfunction SvgCopy(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      fill='currentColor'\n      viewBox='0 0 16 16'\n      width='1em'\n      version='1.1'\n      {...props}\n    >\n      <path\n        fillRule='evenodd'\n        d='M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z'\n      />\n      <path\n        fillRule='evenodd'\n        d='M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z'\n      />\n    </svg>\n  )\n}\n\nexport default SvgCopy\n"],"mappings":"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","names":[]}