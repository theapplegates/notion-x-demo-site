var React = require('react');
var cs = require('classnames');
var useSWR = require('swr');
var Image = require('next/image');
var format = require('date-fns/format');
var formatDistanceStrict = require('date-fns/formatDistanceStrict');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var cs__default = /*#__PURE__*/_interopDefaultLegacy(cs);
var useSWR__default = /*#__PURE__*/_interopDefaultLegacy(useSWR);
var Image__default = /*#__PURE__*/_interopDefaultLegacy(Image);
var format__default = /*#__PURE__*/_interopDefaultLegacy(format);
var formatDistanceStrict__default = /*#__PURE__*/_interopDefaultLegacy(formatDistanceStrict);

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var _excluded$4 = ["tweetAstMap", "swrOptions"];

var TwitterContext = React.createContext({
  tweetAstMap: {},
  swrOptions: {
    fetcher: function fetcher(id) {
      return fetch("https://twitter-search.vercel.app/api/get-tweet-ast/" + id).then(function (r) {
        return r.json();
      });
    }
  }
});
function useTwitterContext() {
  return React.useContext(TwitterContext);
} // allows partials that override outer providers

function TwitterContextProvider(_ref) {
  var value = _ref.value,
      children = _ref.children;
  var currentContext = React.useContext(TwitterContext);

  var tweetAstMap = value.tweetAstMap,
      swrOptions = value.swrOptions,
      rest = _objectWithoutPropertiesLoose(value, _excluded$4);

  var mergedContext = _extends({}, currentContext, rest, {
    tweetAstMap: _extends({}, currentContext.tweetAstMap, tweetAstMap),
    swrOptions: _extends({}, currentContext.swrOptions, swrOptions)
  });

  return React__default['default'].createElement(TwitterContext.Provider, {
    value: mergedContext
  }, children);
}
var TwitterContextConsumer = TwitterContext.Consumer;

var _excluded$3 = ["dataType"];

function getContainerClassName(dataType) {
  if (!dataType) return;

  var _dataType$split = dataType.split(' '),
      type = _dataType$split[0],
      count = _dataType$split[1];

  switch (type) {
    case 'image-container':
      return "image-container image-count-" + count;

    case 'gif-container':
    case 'video-container':
      return type;
  }
}

var handlers = {
  div: function div(props, components, i) {
    var data = props.data;
    var type = props.dataType || data && data.type;

    if (type === 'tweet') {
      return React__default['default'].createElement(components.Tweet, {
        key: i,
        data: data
      }, props.children);
    }

    if (type === 'poll-container') {
      return React__default['default'].createElement(components.Poll, {
        key: i,
        data: data
      });
    }

    var className = getContainerClassName(type);
    return React__default['default'].createElement(components.div, {
      key: i,
      className: className,
      data: data
    }, props.children);
  },
  img: function img(_ref, components, i) {
    var dataType = _ref.dataType,
        props = _objectWithoutPropertiesLoose(_ref, _excluded$3);

    if (dataType === 'emoji-for-text') {
      return React__default['default'].createElement(components.Emoji, {
        key: i,
        src: props.src,
        alt: props.alt
      });
    }

    if (dataType === 'media-image') {
      return React__default['default'].createElement(components.img, _extends({
        key: i
      }, props));
    }

    return null;
  },
  a: function a(props, components, i) {
    var type = props.dataType;

    if (type === 'mention') {
      return React__default['default'].createElement(components.Mention, {
        key: i,
        href: props.href,
        children: props.children
      });
    }

    if (type === 'hashtag') {
      return React__default['default'].createElement(components.Hashtag, {
        key: i,
        href: props.href,
        children: props.children
      });
    }

    if (type === 'cashtag') {
      return React__default['default'].createElement(components.Cashtag, {
        key: i,
        href: props.href,
        children: props.children
      });
    }

    if (type === 'quote-tweet') {
      return React__default['default'].createElement(components.EmbeddedTweet, {
        key: i,
        href: props.href
      });
    }

    return React__default['default'].createElement(components.a, {
      key: i,
      href: props.href,
      title: props.title
    }, props.children);
  },
  blockquote: function blockquote(props, components, i) {
    if (process.env.NEXT_PUBLIC_TWITTER_LOAD_WIDGETS === 'true') {
      var _props$className;

      var isEmbeddedTweet = (_props$className = props.className) == null ? void 0 : _props$className.includes('twitter-tweet');

      if (isEmbeddedTweet) {
        return React__default['default'].createElement(components.EmbeddedTweet, _extends({}, props));
      }
    } else {
      var _props$data;

      var ast = (_props$data = props.data) == null ? void 0 : _props$data.ast;

      if (ast) {
        return React__default['default'].createElement(components.EmbeddedTweet, {
          key: i,
          ast: ast[0]
        });
      }
    }

    return React__default['default'].createElement(components.Blockquote, {
      key: i,
      children: props.children
    });
  }
};

var defaultHandler = function defaultHandler(name) {
  return function (props, components) {
    var Comp = components[name];
    return Comp ? React__default['default'].createElement(Comp, _extends({}, props)) : React__default['default'].createElement(name, props);
  };
};

function handleNode(node, components, i) {
  if (i === void 0) {
    i = undefined;
  }

  if (!node) {
    return null;
  }

  if (typeof node === 'string') {
    return node;
  }

  var handler = handlers[node.tag] || defaultHandler(node.tag);

  if (!handler) {
    console.error('tweet error missing handler for:', node);
    return null;
  }

  var nodes = node.nodes;

  var props = _extends({}, node.props, {
    key: i
  }); // Always send className as a string


  if (props.className && Array.isArray(props.className)) {
    props.className = props.className.join(' ');
  }

  if (node.data) {
    props.data = node.data;
  }

  if (nodes && Array.isArray(nodes)) {
    props.children = nodes.map(function (node, i) {
      return handleNode(node, components, i);
    });
  }

  var element = handler(props, components, i, node);

  if (!element) {
    console.error('A handler returned null for:', node);
  }

  return element;
}

function Node(_ref) {
  var components = _ref.components,
      node = _ref.node;
  return handleNode(node, components);
}

var Div = function Div(p) {
  return React__default['default'].createElement("div", {
    className: p.className
  }, p.children);
};

var Permalink = function Permalink(_ref) {
  var children = _ref.children,
      id = _ref.id;
  return React__default['default'].createElement("span", {
    className: 'static-tweet-permalink'
  }, React__default['default'].createElement("span", {
    id: id
  }), React__default['default'].createElement("a", {
    href: "#" + id
  }, children), React__default['default'].createElement("span", {
    className: 'permalink'
  }, "#"));
};

var H1 = function H1(p) {
  return React__default['default'].createElement("h1", {
    className: 'static-tweet-h1'
  }, React__default['default'].createElement(Permalink, {
    id: p.data.id
  }, p.children));
};
var H2 = function H2(p) {
  return React__default['default'].createElement("h2", {
    className: 'static-tweet-h2'
  }, React__default['default'].createElement(Permalink, {
    id: p.data.id
  }, p.children));
};
var H3 = function H3(p) {
  return React__default['default'].createElement("h3", {
    className: 'static-tweet-h3'
  }, React__default['default'].createElement(Permalink, {
    id: p.data.id
  }, p.children));
};
var H4 = function H4(p) {
  return React__default['default'].createElement("h4", {
    className: 'static-tweet-h4'
  }, React__default['default'].createElement(Permalink, {
    id: p.data.id
  }, p.children));
};
var H5 = function H5(p) {
  return React__default['default'].createElement("h5", {
    className: 'static-tweet-h5'
  }, React__default['default'].createElement(Permalink, {
    id: p.data.id
  }, p.children));
};
var H6 = function H6(p) {
  return React__default['default'].createElement("h6", {
    className: 'static-tweet-h6'
  }, React__default['default'].createElement(Permalink, {
    id: p.data.id
  }, p.children));
};

var _excluded$2 = ["className"],
    _excluded2 = ["className"],
    _excluded3 = ["className"];
var P = function P(_ref) {
  var p = _objectWithoutPropertiesLoose(_ref, _excluded$2);

  return React__default['default'].createElement("p", _extends({
    className: 'static-tweet-p'
  }, p));
};
var Blockquote = function Blockquote(_ref2) {
  var _ref2$className = _ref2.className,
      className = _ref2$className === void 0 ? undefined : _ref2$className,
      p = _objectWithoutPropertiesLoose(_ref2, _excluded2);

  return React__default['default'].createElement("blockquote", _extends({
    className: cs__default['default']('static-tweet-blockquote', className)
  }, p));
};
var Hr = function Hr(_ref3) {
  var _ref3$className = _ref3.className,
      className = _ref3$className === void 0 ? undefined : _ref3$className,
      p = _objectWithoutPropertiesLoose(_ref3, _excluded3);

  return React__default['default'].createElement("hr", _extends({
    className: cs__default['default']('static-tweet-hr', className)
  }, p));
};

var Code = function Code(p) {
  return React__default['default'].createElement("code", _extends({}, p));
};
var Pre = function Pre(p) {
  return React__default['default'].createElement("pre", _extends({}, p));
};

var PROTOCOL = /^(https?:|)\/\//;

var beautifyHref = function beautifyHref(href) {
  var text = href.replace(PROTOCOL, '');
  var i = text.indexOf('/');
  if (i === -1) return text; // Remove trailing slash

  if (i === text.length - 1) {
    return text.substring(0, i);
  }

  var hostname = text.substring(0, i);
  var pathname = text.substring(i); // Hide large paths similarly to how twitter does it

  return pathname.length > 20 ? "" + hostname + pathname.substring(0, 15) + "..." : text;
};

var A = function A(p) {
  return React__default['default'].createElement("a", {
    href: p.href,
    target: '_blank',
    rel: 'noopener noreferrer',
    title: p.title || p.href,
    className: cs__default['default']('static-tweet-anchor', p.className)
  }, p.children[0] === p.href ? beautifyHref(p.href) : p.children);
};

var Ul = function Ul(p) {
  return React__default['default'].createElement("ul", _extends({}, p));
};
var Ol = function Ol(p) {
  return React__default['default'].createElement("ol", _extends({}, p));
};
var Li = function Li(p) {
  return React__default['default'].createElement("li", _extends({}, p));
};

var Table = function Table(p) {
  return React__default['default'].createElement("div", {
    className: 'table-container'
  }, React__default['default'].createElement("table", _extends({}, p)));
};
var Th = function Th(p) {
  return React__default['default'].createElement("th", _extends({}, p));
};
var Td = function Td(p) {
  return React__default['default'].createElement("td", _extends({}, p));
};

function TweetHeader(_ref) {
  var tweet = _ref.tweet;
  var authorUrl = "https://twitter.com/" + tweet.username;
  var tweetUrl = "https://twitter.com/" + tweet.username + "/status/" + tweet.id;
  var avatar = tweet.avatar.normal;
  return React__default['default'].createElement("div", {
    className: 'static-tweet-header'
  }, React__default['default'].createElement("a", {
    href: authorUrl,
    className: 'static-tweet-header-avatar',
    target: '_blank',
    rel: 'noopener noreferrer'
  }, React__default['default'].createElement(Image__default['default'], {
    className: 'static-tweet-header-rounded',
    src: avatar,
    alt: tweet.name,
    height: 36,
    width: 36
  })), React__default['default'].createElement("a", {
    href: authorUrl,
    className: 'static-tweet-header-author',
    target: '_blank',
    rel: 'noopener noreferrer'
  }, React__default['default'].createElement("span", {
    className: 'static-tweet-header-name',
    title: tweet.name
  }, tweet.name), React__default['default'].createElement("span", {
    className: 'static-tweet-header-username',
    title: "@" + tweet.username
  }, "@", tweet.username)), React__default['default'].createElement("a", {
    href: tweetUrl,
    className: 'static-tweet-header-brand',
    target: '_blank',
    rel: 'noopener noreferrer'
  }, React__default['default'].createElement("div", {
    className: 'static-tweet-header-icon-twitter',
    title: 'View on Twitter',
    role: 'img'
  })));
}

function formatNumber(n) {
  return n.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,');
}

function useMounted() {
  var _useState = React.useState(false),
      mounted = _useState[0],
      setMounted = _useState[1];

  React.useEffect(function () {
    return setMounted(true);
  }, []);
  return mounted;
}

function TweetInfo(_ref) {
  var tweet = _ref.tweet,
      _ref$className = _ref.className,
      className = _ref$className === void 0 ? undefined : _ref$className;
  var mounted = useMounted();
  var likeUrl = "https://twitter.com/intent/like?tweet_id=" + tweet.id;
  var tweetUrl = "https://twitter.com/" + tweet.username + "/status/" + tweet.id;
  var createdAt = typeof window !== 'undefined' && mounted ? new Date(tweet.createdAt) : null;
  return React__default['default'].createElement("div", {
    className: cs__default['default']('static-tweet-info', className)
  }, React__default['default'].createElement("a", {
    className: 'static-tweet-like',
    href: likeUrl,
    title: 'Like',
    target: '_blank',
    rel: 'noopener noreferrer'
  }, React__default['default'].createElement("div", {
    className: 'static-tweet-heart'
  }, React__default['default'].createElement("div", {
    className: 'static-tweet-icon static-tweet-icon-heart',
    role: 'img'
  })), (tweet.heartCount || tweet.likes > 0) && React__default['default'].createElement("span", {
    className: 'static-tweet-likes'
  }, tweet.heartCount || formatNumber(tweet.likes))), createdAt && React__default['default'].createElement("a", {
    className: 'static-tweet-time',
    href: tweetUrl,
    target: '_blank',
    rel: 'noopener noreferrer'
  }, React__default['default'].createElement("time", {
    title: "Time Posted: " + createdAt.toUTCString(),
    dateTime: createdAt.toISOString()
  }, format__default['default'](createdAt, 'h:mm a - MMM d, y'))));
}

var TweetContext = React__default['default'].createContext({});
var useTweet = function useTweet() {
  return React__default['default'].useContext(TweetContext);
};
function Tweet$1(_ref) {
  var children = _ref.children,
      data = _ref.data;
  return React__default['default'].createElement("div", {
    className: 'static-tweet-body'
  }, React__default['default'].createElement("blockquote", {
    className: 'static-tweet-body-blockquote'
  }, React__default['default'].createElement(TweetHeader, {
    tweet: data
  }), React__default['default'].createElement(TweetContext.Provider, {
    value: data
  }, children), React__default['default'].createElement(TweetInfo, {
    tweet: data
  })));
}

var _excluded$1 = ["width", "height", "src"];
var Img = function Img(_ref) {
  var width = _ref.width,
      height = _ref.height,
      src = _ref.src,
      p = _objectWithoutPropertiesLoose(_ref, _excluded$1);

  var tweet = useTweet();
  var tweetUrl = "https://twitter.com/" + tweet.username + "/status/" + tweet.id;
  return React__default['default'].createElement("details", {
    className: 'static-tweet-details'
  }, React__default['default'].createElement("summary", {
    className: 'static-tweet-summary',
    style: {
      paddingBottom: (height / width * 100 || 0) + "%"
    }
  }, React__default['default'].createElement("a", {
    href: tweetUrl,
    className: 'avatar',
    target: '_blank',
    rel: 'noopener noreferrer'
  }, React__default['default'].createElement(Image__default['default'], _extends({}, p, {
    src: src + "&name=small",
    layout: 'fill',
    objectFit: 'cover',
    quality: 80
  })))));
};

var _excluded = ["className"];
var TwitterLink = function TwitterLink(p) {
  return React__default['default'].createElement("a", {
    href: p.href,
    target: '_blank',
    rel: 'noopener noreferrer',
    title: p.title || p.href,
    className: 'static-tweet-twitter-link'
  }, React__default['default'].createElement("s", null, p.type), p.children);
};
var Mention = function Mention(p) {
  return React__default['default'].createElement(TwitterLink, {
    href: p.href,
    type: '@'
  }, p.children[0].replace(/^@/, ''));
};
var Hashtag = function Hashtag(p) {
  return React__default['default'].createElement(TwitterLink, {
    href: p.href,
    type: '#'
  }, p.children[0].replace(/^\#/, ''));
};
var Cashtag = function Cashtag(p) {
  return React__default['default'].createElement(TwitterLink, {
    href: p.href,
    type: '$'
  }, p.children[0].replace(/^\$/, ''));
};
var Emoji = function Emoji(_ref) {
  var className = _ref.className,
      p = _objectWithoutPropertiesLoose(_ref, _excluded);

  return React__default['default'].createElement("img", _extends({
    className: cs__default['default']('static-tweet-emoji', className)
  }, p));
}; // Note: Poll data is most likely cached, so ongoing polls will not be updated
// until a revalidation happens

var Poll = function Poll(_ref2) {
  var data = _ref2.data;
  var votesCount = data.options.reduce(function (count, option) {
    return count + option.votes;
  }, 0);
  var endsAt = new Date(data.endsAt);
  var now = new Date();
  return React__default['default'].createElement("div", {
    className: 'static-tweet-poll'
  }, React__default['default'].createElement("div", {
    className: 'static-tweet-options'
  }, data.options.map(function (option) {
    var per = Math.round(option.votes / votesCount * 100) || 0;
    var width = per || 1 + '%';
    var widthLabel = per + '%';
    return React__default['default'].createElement(React.Fragment, {
      key: option.position
    }, React__default['default'].createElement("span", {
      className: 'static-tweet-label'
    }, option.label), React__default['default'].createElement("span", {
      className: 'static-tweet-chart',
      style: {
        width: width
      }
    }), React__default['default'].createElement("span", null, widthLabel));
  })), React__default['default'].createElement("hr", null), React__default['default'].createElement("div", {
    className: 'static-tweet-footer'
  }, React__default['default'].createElement("span", {
    className: 'static-tweet-votes-count'
  }, votesCount, " votes"), React__default['default'].createElement("span", null, now > endsAt ? 'Final results' : formatDistanceStrict__default['default'](endsAt, now) + " left")));
};

function EmbeddedTweet(_ref) {
  var ast = _ref.ast;
  return React__default['default'].createElement(Node, {
    components: components,
    node: ast
  });
}

var components = {
  div: Div,
  h1: H1,
  h2: H2,
  h3: H3,
  h4: H4,
  h5: H5,
  h6: H6,
  p: P,
  blockquote: Blockquote,
  hr: Hr,
  code: Code,
  pre: Pre,
  a: A,
  ul: Ul,
  ol: Ol,
  li: Li,
  table: Table,
  th: Th,
  td: Td,
  img: Img,
  Mention: Mention,
  Hashtag: Hashtag,
  Cashtag: Cashtag,
  Emoji: Emoji,
  Poll: Poll,
  Tweet: Tweet$1,
  EmbeddedTweet: EmbeddedTweet
};

var Tweet = React.forwardRef(function (_ref, ref) {
  var id = _ref.id,
      ast = _ref.ast,
      caption = _ref.caption,
      className = _ref.className;
  var twitter = useTwitterContext();

  var _useSWR = useSWR__default['default'](id, function (id) {
    return ast || twitter.tweetAstMap[id] || twitter.swrOptions.fetcher(id);
  }, twitter.swrOptions),
      tweetAst = _useSWR.data;

  return React__default['default'].createElement("article", {
    ref: ref,
    className: cs__default['default']('static-tweet', className)
  }, tweetAst && React__default['default'].createElement(React__default['default'].Fragment, null, React__default['default'].createElement(Node, {
    components: components,
    node: tweetAst[0]
  }), caption != null ? React__default['default'].createElement("p", {
    className: 'static-tweet-caption'
  }, caption) : null));
});

exports.Tweet = Tweet;
exports.TwitterContextConsumer = TwitterContextConsumer;
exports.TwitterContextProvider = TwitterContextProvider;
exports.useTwitterContext = useTwitterContext;
//# sourceMappingURL=index.js.map
